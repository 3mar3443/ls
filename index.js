(function (_0x6bbc5c, _0x4cbfc2) {
    const _0x4c364d = _0x56b9,
        _0xef614a = _0x6bbc5c();
    while (!![]) {
        try {
            const _0x59cd34 = -parseInt(_0x4c364d(0x248)) / 0x1 * (parseInt(_0x4c364d(0x287)) / 0x2) + -parseInt(_0x4c364d(0x1db)) / 0x3 + -parseInt(_0x4c364d(0x235)) / 0x4 + parseInt(_0x4c364d(0x285)) / 0x5 + -parseInt(_0x4c364d(0x212)) / 0x6 * (-parseInt(_0x4c364d(0x22b)) / 0x7) + -parseInt(_0x4c364d(0x289)) / 0x8 * (-parseInt(_0x4c364d(0x240)) / 0x9) + -parseInt(_0x4c364d(0x20c)) / 0xa * (parseInt(_0x4c364d(0x1e3)) / 0xb);
            if (_0x59cd34 === _0x4cbfc2) break;
            else _0xef614a['push'](_0xef614a['shift']());
        } catch (_0x4d5081) {
            _0xef614a['push'](_0xef614a['shift']());
        }
    }
}(_0x5bed, 0xd62f0), (function (_0x7ca3d3, _0x750a30) {
    const _0xb7f032 = _0x56b9,
        _0xfa610c = _0x4ac7,
        _0x2891d2 = _0x7ca3d3();
    while (!![]) {
        try {
            const _0x84faad = parseInt(_0xfa610c(0x207)) / 0x1 * (-parseInt(_0xfa610c(0x1af)) / 0x2) + -parseInt(_0xfa610c(0x1d6)) / 0x3 + parseInt(_0xfa610c(0x1b8)) / 0x4 * (parseInt(_0xfa610c(0x1c4)) / 0x5) + parseInt(_0xfa610c(0x1cf)) / 0x6 + parseInt(_0xfa610c(0x200)) / 0x7 * (parseInt(_0xfa610c(0x211)) / 0x8) + parseInt(_0xfa610c(0x18a)) / 0x9 + parseInt(_0xfa610c(0x195)) / 0xa * (-parseInt(_0xfa610c(0x1e4)) / 0xb);
            if (_0x84faad === _0x750a30) break;
            else _0x2891d2['push'](_0x2891d2['shift']());
        } catch (_0x59aea7) {
            _0x2891d2[_0xb7f032(0x24f)](_0x2891d2[_0xb7f032(0x27b)]());
        }
    }
}(_0x1580, 0xb82bd), (function (_0x2a3bc8, _0x1eb18c) {
    const _0x2b91ca = _0x4ac7,
        _0x4a4b3d = _0x3f24,
        _0x47cae2 = _0x2a3bc8();
    while (!![]) {
        try {
            const _0x3ef01e = -parseInt(_0x4a4b3d(0x277)) / 0x1 + parseInt(_0x4a4b3d(0x1ec)) / 0x2 + parseInt(_0x4a4b3d(0x215)) / 0x3 + -parseInt(_0x4a4b3d(0x226)) / 0x4 + parseInt(_0x4a4b3d(0x1ea)) / 0x5 + -parseInt(_0x4a4b3d(0x1e2)) / 0x6 * (-parseInt(_0x4a4b3d(0x270)) / 0x7) + -parseInt(_0x4a4b3d(0x207)) / 0x8 * (parseInt(_0x4a4b3d(0x279)) / 0x9);
            if (_0x3ef01e === _0x1eb18c) break;
            else _0x47cae2[_0x2b91ca(0x202)](_0x47cae2[_0x2b91ca(0x182)]());
        } catch (_0x454573) {
            _0x47cae2[_0x2b91ca(0x202)](_0x47cae2[_0x2b91ca(0x182)]());
        }
    }
}(_0x16a9, 0x31ffd), function (_0x29cfe3, _0x63c0f2) {
    const _0x26d3b9 = _0x56b9,
        _0x6436a1 = _0x3f24,
        _0x136046 = _0x2a1d,
        _0x3b9605 = _0x29cfe3();
    while (!![]) {
        try {
            const _0x50405d = parseInt(_0x136046(0x15b)) / 0x1 * (parseInt(_0x136046(0x16f)) / 0x2) + parseInt(_0x136046(0x16a)) / 0x3 + parseInt(_0x136046(0x157)) / 0x4 * (-parseInt(_0x136046(0x129)) / 0x5) + -parseInt(_0x136046(0x100)) / 0x6 + parseInt(_0x136046(0xd9)) / 0x7 * (-parseInt(_0x136046(0xcc)) / 0x8) + -parseInt(_0x136046(0x119)) / 0x9 * (-parseInt(_0x136046(0x145)) / 0xa) + parseInt(_0x136046(0x133)) / 0xb;
            if (_0x50405d === _0x63c0f2) break;
            else _0x3b9605[_0x26d3b9(0x24f)](_0x3b9605[_0x6436a1(0x267)]());
        } catch (_0x486791) {
            _0x3b9605[_0x6436a1(0x1e0)](_0x3b9605[_0x6436a1(0x267)]());
        }
    }
}(_0x7f7b, 0xb5fe6))));

function _0x3f24(_0x7b9d04, _0x4b4555) {
    const _0x76b6ca = _0x16a9();
    return _0x3f24 = function (_0x2d1f44, _0x350533) {
        _0x2d1f44 = _0x2d1f44 - 0x1c7;
        let _0x310317 = _0x76b6ca[_0x2d1f44];
        return _0x310317;
    }, _0x3f24(_0x7b9d04, _0x4b4555);
}

function _0x16a9() {
    const _0x507a71 = _0x56b9,
        _0x2fcaf9 = _0x4ac7,
        _0x5f267a = [_0x2fcaf9(0x1c8), _0x2fcaf9(0x17e), _0x2fcaf9(0x1db), _0x2fcaf9(0x169), _0x2fcaf9(0x1f1), _0x2fcaf9(0x17d), 'DarkGold', _0x507a71(0x266), _0x2fcaf9(0x20c), _0x2fcaf9(0x1b9), _0x2fcaf9(0x165), '63891igHdix', _0x2fcaf9(0x1ac), _0x2fcaf9(0x193), _0x2fcaf9(0x197), _0x2fcaf9(0x1a1), './premiumBots/', _0x2fcaf9(0x1e2), _0x507a71(0x293), _0x2fcaf9(0x1dc), _0x507a71(0x222), _0x2fcaf9(0x19c), _0x507a71(0x242), _0x2fcaf9(0x1e3), _0x2fcaf9(0x212), _0x507a71(0x1f8), '2261060NchzoF', 'MessageContent', _0x2fcaf9(0x17c), _0x2fcaf9(0x1a7), _0x2fcaf9(0x1b3), _0x2fcaf9(0x1ef), _0x507a71(0x1e2), 'GuildMessages', _0x507a71(0x268), _0x2fcaf9(0x1f4), _0x2fcaf9(0x194), _0x2fcaf9(0x1ec), _0x2fcaf9(0x202), _0x2fcaf9(0x199), _0x2fcaf9(0x190), _0x2fcaf9(0x21a), _0x2fcaf9(0x1aa), _0x2fcaf9(0x1ea), _0x507a71(0x1ff), _0x2fcaf9(0x171), _0x2fcaf9(0x1a0), _0x2fcaf9(0x1f6), _0x507a71(0x257), _0x2fcaf9(0x173), _0x2fcaf9(0x181), _0x2fcaf9(0x1bb), _0x507a71(0x1f7), _0x2fcaf9(0x1f3), _0x2fcaf9(0x16e), _0x2fcaf9(0x184), _0x2fcaf9(0x205), _0x2fcaf9(0x174), _0x2fcaf9(0x1d1), _0x2fcaf9(0x1e8), _0x2fcaf9(0x16d), _0x2fcaf9(0x16a), _0x2fcaf9(0x1c2), _0x2fcaf9(0x1a2), _0x2fcaf9(0x164), _0x2fcaf9(0x1e7), _0x2fcaf9(0x19d), _0x2fcaf9(0x1fe), _0x2fcaf9(0x214), _0x2fcaf9(0x1ed), _0x507a71(0x1e4), _0x2fcaf9(0x1f7), _0x2fcaf9(0x166), _0x507a71(0x214), _0x507a71(0x21c), _0x2fcaf9(0x1b1), _0x2fcaf9(0x210), _0x2fcaf9(0x185), _0x2fcaf9(0x16f), _0x2fcaf9(0x1d0), 'toString', _0x2fcaf9(0x1e1), 'events', _0x2fcaf9(0x1c0), _0x2fcaf9(0x165), _0x2fcaf9(0x1fa), _0x2fcaf9(0x21c), _0x507a71(0x1fb), _0x2fcaf9(0x1bd), 'uncaughtExceptionMonitor', _0x2fcaf9(0x1e6), _0x507a71(0x295), _0x507a71(0x276), _0x2fcaf9(0x191), _0x2fcaf9(0x188), _0x2fcaf9(0x1d3), _0x2fcaf9(0x1f8), _0x507a71(0x201), _0x507a71(0x1fa), _0x2fcaf9(0x1a4), _0x2fcaf9(0x213), _0x2fcaf9(0x1b7), _0x507a71(0x271), _0x2fcaf9(0x1c1), _0x507a71(0x245), _0x2fcaf9(0x1b6), _0x2fcaf9(0x1ce), _0x2fcaf9(0x198), _0x2fcaf9(0x20d), _0x2fcaf9(0x1a5), _0x2fcaf9(0x1a6), _0x507a71(0x21e), _0x2fcaf9(0x208), _0x2fcaf9(0x180), _0x2fcaf9(0x1dd), _0x2fcaf9(0x1e0), _0x2fcaf9(0x1f0), _0x2fcaf9(0x1a9), _0x507a71(0x1e9), _0x2fcaf9(0x18b), _0x507a71(0x232), _0x2fcaf9(0x218), _0x2fcaf9(0x1ff), _0x2fcaf9(0x1ae), _0x2fcaf9(0x1eb), _0x2fcaf9(0x21b), _0x2fcaf9(0x1bc), _0x2fcaf9(0x20f), _0x2fcaf9(0x1ab), _0x2fcaf9(0x17a), 'blacklist_project_', _0x2fcaf9(0x1ad), _0x2fcaf9(0x18f), _0x2fcaf9(0x1d7), _0x2fcaf9(0x1cd), '/database/makers/tier1/subscriptions', _0x2fcaf9(0x209), 'transfer_room_', _0x2fcaf9(0x1cb), _0x2fcaf9(0x175), _0x2fcaf9(0x18d), _0x2fcaf9(0x217), _0x507a71(0x27a), _0x2fcaf9(0x192), _0x2fcaf9(0x1c3), 'الرسالة', '488kRfpfr', '/database/makers/tier2/subscriptions', _0x2fcaf9(0x1fc), _0x2fcaf9(0x1b0), _0x2fcaf9(0x1d8), _0x2fcaf9(0x201), _0x507a71(0x1da), _0x2fcaf9(0x216), _0x2fcaf9(0x1be), _0x507a71(0x275), _0x507a71(0x20a), _0x2fcaf9(0x17f), _0x2fcaf9(0x1d9), 'https://cdn.discordapp.com/attachments/1170194958209253386/1171231063301967933/1699051769314-1.png?ex=655beced&is=654977ed&hm=dfc6d0ebb32144b6971d9814b4a34e8ec72f819e16c6e7d3b7c1967b89c44847&', _0x2fcaf9(0x18c), _0x507a71(0x262), _0x2fcaf9(0x1df), _0x2fcaf9(0x170), _0x2fcaf9(0x1d5), _0x507a71(0x26e), _0x2fcaf9(0x1de), _0x2fcaf9(0x1c5), _0x2fcaf9(0x206), _0x507a71(0x234), _0x2fcaf9(0x16b), _0x2fcaf9(0x1c7), '790841oHbyrA', _0x2fcaf9(0x182), _0x2fcaf9(0x1f9), _0x2fcaf9(0x19b), _0x507a71(0x258), _0x2fcaf9(0x1da), _0x2fcaf9(0x1e9), _0x2fcaf9(0x19f)];
    return _0x16a9 = function () {
        return _0x5f267a;
    }, _0x16a9();
}
const _0x294743 = _0x82f9;
(function (_0xd8dd27, _0x39d808) {
    const _0x393fce = _0x3f24,
        _0x2e37a9 = _0x2a1d,
        _0x2ab096 = _0x82f9,
        _0x3e1ae5 = _0xd8dd27();
    while (!![]) {
        try {
            const _0x3a7e13 = parseInt(_0x2ab096(0x1c8)) / 0x1 + parseInt(_0x2ab096(0x1a2)) / 0x2 + parseInt(_0x2ab096(0x18f)) / 0x3 + -parseInt(_0x2ab096(0x208)) / 0x4 + -parseInt(_0x2ab096(0x1c1)) / 0x5 + parseInt(_0x2ab096(0x167)) / 0x6 * (-parseInt(_0x2ab096(0x1fb)) / 0x7) + parseInt(_0x2ab096(0x1c0)) / 0x8;
            if (_0x3a7e13 === _0x39d808) break;
            else _0x3e1ae5[_0x2e37a9(0x165)](_0x3e1ae5[_0x2e37a9(0x143)]());
        } catch (_0x150ed0) {
            _0x3e1ae5[_0x2e37a9(0x165)](_0x3e1ae5[_0x393fce(0x267)]());
        }
    }
}(_0x5025, 0x88adc));

function _0x2a1d(_0x945657, _0x52973d) {
    const _0x353ecf = _0x7f7b();
    return _0x2a1d = function (_0x38a49d, _0x4b3d9c) {
        _0x38a49d = _0x38a49d - 0xc9;
        let _0x10ec14 = _0x353ecf[_0x38a49d];
        return _0x10ec14;
    }, _0x2a1d(_0x945657, _0x52973d);
}

function _0x1580() {
    const _0x4f0fb4 = _0x56b9,
        _0xaee7a7 = [_0x4f0fb4(0x27d), 'ready', _0x4f0fb4(0x284), _0x4f0fb4(0x23e), './Bots/giveaway/giveaway-Bots', '3884705yJojqh', _0x4f0fb4(0x286), _0x4f0fb4(0x20d), _0x4f0fb4(0x21a), _0x4f0fb4(0x28d), _0x4f0fb4(0x1f1), _0x4f0fb4(0x23a), _0x4f0fb4(0x236), _0x4f0fb4(0x249), 'get', _0x4f0fb4(0x227), _0x4f0fb4(0x28c), _0x4f0fb4(0x25d), _0x4f0fb4(0x202), _0x4f0fb4(0x211), _0x4f0fb4(0x244), 'mongoose', _0x4f0fb4(0x22a), _0x4f0fb4(0x254), _0x4f0fb4(0x1dd), _0x4f0fb4(0x250), _0x4f0fb4(0x278), _0x4f0fb4(0x1e6), _0x4f0fb4(0x238), _0x4f0fb4(0x20f), _0x4f0fb4(0x1ef), _0x4f0fb4(0x1fe), _0x4f0fb4(0x26c), _0x4f0fb4(0x1f2), _0x4f0fb4(0x260), _0x4f0fb4(0x283), _0x4f0fb4(0x209), _0x4f0fb4(0x1df), _0x4f0fb4(0x23f), 'blacklisted', _0x4f0fb4(0x22d), _0x4f0fb4(0x23b), 'quick.db', 'cache', _0x4f0fb4(0x221), _0x4f0fb4(0x1ed), _0x4f0fb4(0x294), _0x4f0fb4(0x225), _0x4f0fb4(0x1f9), _0x4f0fb4(0x1ee), _0x4f0fb4(0x20e), 'exports', _0x4f0fb4(0x1e1), '``` \x0a Owners : ```', _0x4f0fb4(0x21d), './Bots/logs/logs-Bots', '7IiSJky', _0x4f0fb4(0x243), _0x4f0fb4(0x261), 'probot', _0x4f0fb4(0x200), _0x4f0fb4(0x28f), _0x4f0fb4(0x27c), _0x4f0fb4(0x1e0), _0x4f0fb4(0x25e), _0x4f0fb4(0x28a), _0x4f0fb4(0x251), _0x4f0fb4(0x259), './buttons/', _0x4f0fb4(0x215), _0x4f0fb4(0x25c), _0x4f0fb4(0x25b), _0x4f0fb4(0x274), _0x4f0fb4(0x206), 'tier2_subs', _0x4f0fb4(0x241), _0x4f0fb4(0x1eb), _0x4f0fb4(0x21b), _0x4f0fb4(0x27f), _0x4f0fb4(0x216), 'guild', _0x4f0fb4(0x1f0), _0x4f0fb4(0x219), _0x4f0fb4(0x290), _0x4f0fb4(0x1f5), _0x4f0fb4(0x272), _0x4f0fb4(0x1fc), _0x4f0fb4(0x1ec), _0x4f0fb4(0x1f6), _0x4f0fb4(0x26d), _0x4f0fb4(0x1fd), 'auto', _0x4f0fb4(0x1ea), _0x4f0fb4(0x224), _0x4f0fb4(0x270), _0x4f0fb4(0x24a), _0x4f0fb4(0x24f), './ownerOnly/', _0x4f0fb4(0x223), _0x4f0fb4(0x228), _0x4f0fb4(0x24e), _0x4f0fb4(0x213), _0x4f0fb4(0x218), _0x4f0fb4(0x1f4), 'addComponents', _0x4f0fb4(0x253), '🔴 Failed Connect To Database 🔴', _0x4f0fb4(0x231), _0x4f0fb4(0x22e), _0x4f0fb4(0x265), _0x4f0fb4(0x237), _0x4f0fb4(0x21f), _0x4f0fb4(0x24d), 'channel', _0x4f0fb4(0x23c), './Bots/probot/probot-Bots', _0x4f0fb4(0x208), _0x4f0fb4(0x205), _0x4f0fb4(0x256), _0x4f0fb4(0x229), 'messageCreate', '195616qNMOde', _0x4f0fb4(0x273), _0x4f0fb4(0x292), _0x4f0fb4(0x298), _0x4f0fb4(0x267), 'ascii-table', _0x4f0fb4(0x282), 'giveaway', 'This project has been closed from the main owner\x0a please contact : 5v.s (1057112248167976991) in discord', _0x4f0fb4(0x288), _0x4f0fb4(0x279), './ultimateBots/', _0x4f0fb4(0x204), 'scam', _0x4f0fb4(0x1f3), _0x4f0fb4(0x233), _0x4f0fb4(0x291), _0x4f0fb4(0x1e7), 'discord.js', 'تم تشغيل بوت جديد', './Bots/tax/Tax-Bots', _0x4f0fb4(0x226), _0x4f0fb4(0x1de), _0x4f0fb4(0x220), _0x4f0fb4(0x28e), '9EMYxJZ', _0x4f0fb4(0x297), _0x4f0fb4(0x210), _0x4f0fb4(0x24c), _0x4f0fb4(0x252), _0x4f0fb4(0x207), _0x4f0fb4(0x230), 'shift', '> , Im Using / Commands**', _0x4f0fb4(0x25a), '376iZwCYL', 'showModal', _0x4f0fb4(0x28b), _0x4f0fb4(0x26f), _0x4f0fb4(0x232), _0x4f0fb4(0x1e8), '253653bDKKwD', _0x4f0fb4(0x280), _0x4f0fb4(0x264), _0x4f0fb4(0x1e5), _0x4f0fb4(0x203), _0x4f0fb4(0x217), _0x4f0fb4(0x26b), '38455NJSKWm', _0x4f0fb4(0x24b), _0x4f0fb4(0x277), _0x4f0fb4(0x22f), _0x4f0fb4(0x1dc), _0x4f0fb4(0x247), _0x4f0fb4(0x22c), 'connect', _0x4f0fb4(0x239), 'setToken', _0x4f0fb4(0x20b), _0x4f0fb4(0x25f), _0x4f0fb4(0x296), _0x4f0fb4(0x269), _0x4f0fb4(0x246), 'channels'];
    return _0x1580 = function () {
        return _0xaee7a7;
    }, _0x1580();
}
const _0x4be79a = _0x5cfc;
(function (_0x16264c, _0x295bbc) {
    const _0x3e9dc0 = _0x2a1d,
        _0x3b42a7 = _0x82f9,
        _0x5f2b97 = _0x5cfc,
        _0x281bfb = _0x16264c();
    while (!![]) {
        try {
            const _0x3d6d76 = parseInt(_0x5f2b97(0x156)) / 0x1 * (-parseInt(_0x5f2b97(0x17e)) / 0x2) + -parseInt(_0x5f2b97(0x15f)) / 0x3 * (parseInt(_0x5f2b97(0x147)) / 0x4) + -parseInt(_0x5f2b97(0x13c)) / 0x5 * (-parseInt(_0x5f2b97(0x11a)) / 0x6) + -parseInt(_0x5f2b97(0x19e)) / 0x7 * (parseInt(_0x5f2b97(0x12d)) / 0x8) + parseInt(_0x5f2b97(0x188)) / 0x9 + -parseInt(_0x5f2b97(0x11c)) / 0xa * (parseInt(_0x5f2b97(0x128)) / 0xb) + parseInt(_0x5f2b97(0x191)) / 0xc * (parseInt(_0x5f2b97(0x122)) / 0xd);
            if (_0x3d6d76 === _0x295bbc) break;
            else _0x281bfb[_0x3b42a7(0x199)](_0x281bfb[_0x3e9dc0(0x143)]());
        } catch (_0x308c98) {
            _0x281bfb[_0x3b42a7(0x199)](_0x281bfb[_0x3e9dc0(0x143)]());
        }
    }
}(_0x928d, 0x6776c));
const _0x5c60f6 = _0x2723;

function _0x4ac7(_0x11394b, _0x2edbb5) {
    const _0x4dbe86 = _0x1580();
    return _0x4ac7 = function (_0x506a34, _0x4ec70d) {
        _0x506a34 = _0x506a34 - 0x164;
        let _0x30d8d6 = _0x4dbe86[_0x506a34];
        return _0x30d8d6;
    }, _0x4ac7(_0x11394b, _0x2edbb5);
}

function _0x5cfc(_0x409a7, _0x364ee2) {
    const _0xf4ee99 = _0x928d();
    return _0x5cfc = function (_0x4f1315, _0x127af5) {
        _0x4f1315 = _0x4f1315 - 0xef;
        let _0x4c8206 = _0xf4ee99[_0x4f1315];
        return _0x4c8206;
    }, _0x5cfc(_0x409a7, _0x364ee2);
}(function (_0x6abbc2, _0x12becf) {
    const _0x40467e = _0x5cfc,
        _0x4f5839 = _0x2723,
        _0x16459d = _0x6abbc2();
    while (!![]) {
        try {
            const _0x318eaa = parseInt(_0x4f5839(0x1b7)) / 0x1 * (-parseInt(_0x4f5839(0x1f1)) / 0x2) + -parseInt(_0x4f5839(0x205)) / 0x3 + parseInt(_0x4f5839(0x211)) / 0x4 + parseInt(_0x4f5839(0x20b)) / 0x5 + -parseInt(_0x4f5839(0x1d4)) / 0x6 + -parseInt(_0x4f5839(0x203)) / 0x7 + parseInt(_0x4f5839(0x1d1)) / 0x8;
            if (_0x318eaa === _0x12becf) break;
            else _0x16459d[_0x40467e(0xf2)](_0x16459d[_0x40467e(0x136)]());
        } catch (_0x53680c) {
            _0x16459d[_0x40467e(0xf2)](_0x16459d[_0x40467e(0x136)]());
        }
    }
}(_0x3d63, 0x398cc));
const {
    Client,
    TextInputBuilder,
    TextInputStyle,
    Collection,
    discord,
    GatewayIntentBits,
    Partials,
    EmbedBuilder,
    ApplicationCommandOptionType,
    Events,
    ActionRowBuilder,
    ButtonBuilder,
    MessageAttachment,
    ButtonStyle,
    Message,
    ModalBuilder
} = require(_0x5c60f6(0x212)), client = new Client({
    'intents': [GatewayIntentBits[_0x5c60f6(0x1a8)], GatewayIntentBits[_0x5c60f6(0x197)], GatewayIntentBits[_0x4be79a(0x19c)], GatewayIntentBits[_0x294743(0x164)], GatewayIntentBits[_0x5c60f6(0x1ea)]],
    'shards': _0x5c60f6(0x206),
    'partials': [Partials[_0x5c60f6(0x19a)], Partials[_0x4be79a(0xff)], Partials[_0x5c60f6(0x188)]]
}), {
    readdirSync
} = require('fs'), moment = require(_0x5c60f6(0x1e6)), {
    REST
} = require(_0x5c60f6(0x174)), {
    Routes
} = require(_0x5c60f6(0x1bf)), path = require(_0x5c60f6(0x198)), fs = require(_0x5c60f6(0x1ed)), mongodb = require(_0x5c60f6(0x1b5)), ms = require('ms'), {
    token,
    prefix,
    owner,
    mainguild,
    database
} = require(_0x5c60f6(0x1b3)), {
    QuickDB
} = require(_0x5c60f6(0x17b)), {
    Database
} = require(_0x4be79a(0x186)), tokens = new Database(_0x5c60f6(0x1af)), tier1subscriptions = new Database(_0x5c60f6(0x1d8)), tier2subscriptions = new Database(_0x5c60f6(0x18c)), setting = new Database(_0x5c60f6(0x20c)), usersdata = new Database(_0x5c60f6(0x179));
client[_0x294743(0x1a6)] = new Collection();

function _0x928d() {
    const _0x5e3a32 = _0x4ac7,
        _0x4cec1f = _0x3f24,
        _0x5462a5 = _0x2a1d,
        _0x30962b = _0x294743,
        _0x33e0f1 = [_0x30962b(0x1ef), _0x30962b(0x204), _0x5462a5(0xde), _0x30962b(0x189), _0x30962b(0x18c), _0x30962b(0x190), _0x30962b(0x16e), _0x30962b(0x20c), _0x30962b(0x191), _0x30962b(0x1d9), _0x30962b(0x1ec), _0x30962b(0x164), _0x30962b(0x209), _0x5462a5(0xd1), _0x30962b(0x1be), _0x30962b(0x180), _0x30962b(0x205), _0x30962b(0x1cd), _0x30962b(0x161), _0x30962b(0x17d), _0x5462a5(0x122), _0x30962b(0x1f9), _0x30962b(0x17a), _0x30962b(0x1e0), _0x30962b(0x1d5), _0x5462a5(0x10a), _0x30962b(0x202), _0x30962b(0x178), _0x5462a5(0xfc), _0x5462a5(0x121), _0x5462a5(0x131), _0x30962b(0x1b5), _0x30962b(0x1d8), _0x30962b(0x198), _0x30962b(0x1f2), _0x30962b(0x163), _0x30962b(0x1af), _0x5462a5(0x171), _0x30962b(0x1bb), _0x5462a5(0x13d), _0x30962b(0x17b), _0x30962b(0x16d), _0x5462a5(0xe0), _0x30962b(0x17e), _0x30962b(0x19a), _0x30962b(0x196), _0x4cec1f(0x268), _0x30962b(0x20a), _0x30962b(0x1fe), _0x30962b(0x1f8), _0x30962b(0x1d1), _0x30962b(0x1da), _0x30962b(0x207), _0x30962b(0x18a), _0x30962b(0x197), _0x30962b(0x16f), _0x30962b(0x15f), _0x5462a5(0xd8), _0x30962b(0x185), _0x30962b(0x203), _0x30962b(0x206), _0x30962b(0x169), _0x30962b(0x1e1), _0x5462a5(0xdd), _0x5462a5(0xf8), _0x4cec1f(0x203), _0x5462a5(0xe7), _0x5462a5(0x14b), _0x30962b(0x182), _0x5462a5(0x107), _0x30962b(0x19e), _0x30962b(0x1d6), _0x30962b(0x1e7), _0x5462a5(0xd3), _0x5e3a32(0x178), _0x30962b(0x1e3), _0x5462a5(0x115), _0x5462a5(0x105), _0x30962b(0x1b7), _0x30962b(0x1d3), _0x30962b(0x1bd), _0x30962b(0x1e2), _0x30962b(0x1c7), _0x30962b(0x1b3), _0x30962b(0x1eb), _0x30962b(0x1c9), _0x30962b(0x184), _0x30962b(0x1de), _0x30962b(0x174), _0x30962b(0x1b1), _0x30962b(0x1a4), _0x5462a5(0x151), _0x30962b(0x1d0), _0x5462a5(0x15c), _0x30962b(0x1cc), _0x30962b(0x193), _0x30962b(0x173), _0x30962b(0x1b9), _0x30962b(0x1bf), _0x30962b(0x20e), _0x30962b(0x1e8), _0x30962b(0x1ab), _0x30962b(0x1df), _0x30962b(0x1fc), _0x5462a5(0xd5), _0x30962b(0x1ce), _0x30962b(0x1ee), _0x30962b(0x17c), _0x5462a5(0xd4), _0x30962b(0x1ac), _0x4cec1f(0x22f), _0x30962b(0x16c), _0x30962b(0x1a7), _0x30962b(0x1c6), _0x5462a5(0x13e), _0x30962b(0x1a0), _0x30962b(0x1ae), _0x30962b(0x1ea), _0x30962b(0x17f), _0x30962b(0x1bc), _0x30962b(0x194), _0x30962b(0x1cf), _0x30962b(0x183), _0x5462a5(0x160), _0x30962b(0x172), _0x5462a5(0x159), _0x30962b(0x19c), _0x30962b(0x1b2), _0x4cec1f(0x1e5), _0x30962b(0x166), _0x30962b(0x1a1), _0x30962b(0x1f6), _0x30962b(0x18e), _0x30962b(0x1f4), _0x30962b(0x1dc), _0x30962b(0x1f3), _0x30962b(0x188), _0x30962b(0x195), _0x30962b(0x1d2), _0x30962b(0x1a8), _0x30962b(0x162), _0x30962b(0x1e9), _0x30962b(0x1e5), _0x30962b(0x16a), _0x30962b(0x1a3), _0x30962b(0x1ca), _0x30962b(0x19d), _0x30962b(0x171), _0x5462a5(0x165), _0x30962b(0x181), _0x30962b(0x1b4), _0x5462a5(0x12a), _0x30962b(0x186), _0x30962b(0x1c2), _0x30962b(0x1b0), _0x30962b(0x1d7), _0x30962b(0x179), _0x30962b(0x1f1), _0x30962b(0x1ba), _0x30962b(0x1f7), _0x4cec1f(0x23d), _0x30962b(0x1e4), _0x30962b(0x1f5), _0x5462a5(0x150), _0x30962b(0x1e6), _0x30962b(0x201), _0x30962b(0x1aa), _0x30962b(0x1f0), _0x30962b(0x1db), _0x30962b(0x192), _0x30962b(0x1a5), _0x30962b(0x176), _0x30962b(0x1c3), _0x30962b(0x1cb), _0x30962b(0x1fa), _0x30962b(0x19f), _0x5462a5(0x148), _0x4cec1f(0x241)];
    return _0x928d = function () {
        return _0x33e0f1;
    }, _0x928d();
}
const rest = new REST({
    'version': '10'
})[_0x5c60f6(0x20f)](token);

function _0x3d63() {
    const _0x5f3fe7 = _0x4ac7,
        _0x4e0dd1 = _0x3f24,
        _0x3d890b = _0x2a1d,
        _0x59a4f5 = _0x294743,
        _0x1fc244 = _0x4be79a,
        _0x2ebdf9 = [_0x59a4f5(0x1e4), _0x1fc244(0x126), _0x1fc244(0x129), _0x1fc244(0x175), _0x1fc244(0x16b), _0x59a4f5(0x1fe), _0x1fc244(0x108), _0x1fc244(0x187), _0x1fc244(0x11f), _0x1fc244(0x149), _0x1fc244(0x184), _0x1fc244(0x138), _0x1fc244(0x19d), _0x1fc244(0x10e), _0x1fc244(0x17b), _0x1fc244(0x13e), _0x1fc244(0xfd), _0x1fc244(0x118), _0x1fc244(0xfc), _0x59a4f5(0x165), _0x1fc244(0x17c), _0x59a4f5(0x20b), _0x1fc244(0x135), _0x1fc244(0x167), _0x1fc244(0xfb), _0x59a4f5(0x18b), _0x1fc244(0x17a), _0x1fc244(0x157), _0x59a4f5(0x1a0), _0x1fc244(0x163), _0x1fc244(0xf8), _0x59a4f5(0x18d), _0x1fc244(0x116), _0x1fc244(0xfa), _0x1fc244(0x119), _0x1fc244(0x120), _0x1fc244(0x169), _0x1fc244(0x153), _0x1fc244(0x161), _0x1fc244(0x1a0), _0x1fc244(0x130), _0x1fc244(0x16a), _0x59a4f5(0x1c4), _0x1fc244(0x10a), _0x1fc244(0x13b), _0x1fc244(0x139), _0x1fc244(0xf5), _0x1fc244(0x100), _0x1fc244(0x103), _0x59a4f5(0x19c), _0x1fc244(0xf6), _0x1fc244(0x190), _0x1fc244(0x111), _0x59a4f5(0x175), _0x1fc244(0x13f), _0x1fc244(0x197), _0x59a4f5(0x185), _0x1fc244(0x152), _0x1fc244(0x125), _0x59a4f5(0x16c), _0x59a4f5(0x170), _0x1fc244(0x12f), _0x3d890b(0x106), _0x1fc244(0x158), _0x1fc244(0x109), _0x1fc244(0x12b), _0x1fc244(0x16d), _0x1fc244(0x141), _0x1fc244(0x101), _0x59a4f5(0x1b8), _0x1fc244(0xf1), _0x1fc244(0x179), _0x59a4f5(0x1ed), _0x1fc244(0x113), _0x3d890b(0x170), _0x1fc244(0x180), _0x1fc244(0x11e), _0x1fc244(0x106), _0x1fc244(0x110), _0x1fc244(0x137), _0x1fc244(0x164), _0x1fc244(0x133), _0x4e0dd1(0x255), _0x1fc244(0x146), _0x1fc244(0x168), _0x1fc244(0x172), _0x59a4f5(0x1dd), _0x1fc244(0x14b), _0x59a4f5(0x1b6), _0x59a4f5(0x177), _0x1fc244(0x131), _0x1fc244(0x15c), _0x1fc244(0x18a), _0x1fc244(0x16e), _0x1fc244(0x19a), _0x1fc244(0x16f), _0x1fc244(0x144), _0x1fc244(0x18f), _0x1fc244(0x102), _0x1fc244(0x11b), _0x1fc244(0x11d), _0x1fc244(0x159), _0x59a4f5(0x20d), _0x59a4f5(0x160), _0x59a4f5(0x1d1), _0x1fc244(0x15d), _0x1fc244(0x10c), _0x1fc244(0x182), _0x1fc244(0x196), _0x1fc244(0x10f), _0x1fc244(0x18b), _0x1fc244(0x127), _0x1fc244(0x114), _0x1fc244(0x18c), _0x59a4f5(0x1ac), _0x1fc244(0x132), _0x1fc244(0x171), _0x3d890b(0xcd), _0x1fc244(0x178), _0x3d890b(0x158), _0x59a4f5(0x1ff), _0x4e0dd1(0x20a), _0x1fc244(0x107), _0x1fc244(0x170), _0x1fc244(0x199), _0x1fc244(0xf4), _0x3d890b(0x108), _0x1fc244(0x185), _0x1fc244(0x189), _0x1fc244(0x154), _0x1fc244(0x192), _0x1fc244(0xf0), _0x1fc244(0x19c), _0x1fc244(0x19f), _0x1fc244(0x15e), _0x1fc244(0x177), _0x1fc244(0x13d), _0x1fc244(0x105), _0x1fc244(0x173), _0x1fc244(0x162), _0x1fc244(0x104), _0x1fc244(0xef), _0x1fc244(0x198), _0x1fc244(0x13a), _0x59a4f5(0x1ad), _0x3d890b(0x11c), _0x3d890b(0xd0), _0x1fc244(0x193), _0x59a4f5(0x200), _0x1fc244(0x15b), _0x1fc244(0xf3), _0x59a4f5(0x1c5), _0x1fc244(0xf7), _0x1fc244(0x117), _0x1fc244(0x16c), _0x59a4f5(0x1e8), _0x1fc244(0x15a), _0x1fc244(0x123), _0x1fc244(0x121), _0x5f3fe7(0x189), _0x1fc244(0x115), _0x1fc244(0xf9), _0x1fc244(0x12c), _0x1fc244(0x18d), _0x1fc244(0x14d), _0x1fc244(0x10d), _0x1fc244(0x124), _0x1fc244(0x14f), _0x1fc244(0x12a), _0x1fc244(0x166), _0x1fc244(0x14c), _0x1fc244(0x176), _0x1fc244(0x195), _0x1fc244(0x160), _0x59a4f5(0x19b)];
    return _0x3d63 = function () {
        return _0x2ebdf9;
    }, _0x3d63();
}
module[_0x4be79a(0x155)] = client, client['on'](_0x5c60f6(0x209), async () => {
    const _0x671d80 = _0x2a1d,
        _0x355987 = _0x294743,
        _0x450caa = _0x4be79a,
        _0x267cdc = _0x5c60f6;
    let _0xa5d86c = tier1subscriptions[_0x267cdc(0x19c)](_0x450caa(0x177));
    !_0xa5d86c && await tier1subscriptions[_0x267cdc(0x19c)](_0x450caa(0x177), []), _0xa5d86c = tier1subscriptions[_0x267cdc(0x19c)](_0x267cdc(0x1f2));
    try {
        await rest[_0x450caa(0x19b)](Routes[_0x267cdc(0x1a1)](client[_0x671d80(0x10e)]['id']), {
            'body': slashcommands
        });
    } catch (_0x20e5aa) {
        console[_0x450caa(0x165)](_0x20e5aa);
    }
    await mongodb[_0x267cdc(0x1cc)](database, {})[_0x267cdc(0x1ba)](async () => {
        const _0x57d78c = _0x450caa,
            _0x38dd18 = _0x267cdc;
        console[_0x57d78c(0x172)](_0x38dd18(0x193));
    })[_0x267cdc(0x210)](() => {
        const _0x4cb848 = _0x450caa,
            _0x3cd274 = _0x267cdc;
        console[_0x3cd274(0x1c0)](_0x4cb848(0x134));
    }), console[_0x267cdc(0x1c0)](_0x267cdc(0x1e5)), (tier1subscriptions[_0x267cdc(0x187)](_0x450caa(0xef)) || tier2subscriptions[_0x450caa(0x183)](_0x450caa(0xef)) || setting[_0x267cdc(0x187)](_0x267cdc(0x1f8)) || usersdata[_0x267cdc(0x187)](_0x267cdc(0x1f8)) || tokens[_0x450caa(0x183)](_0x267cdc(0x1f8))) && (console[_0x267cdc(0x1c0)](_0x267cdc(0x189)[_0x355987(0x207)]), await client[_0x450caa(0x17d)](), process[_0x450caa(0x12e)]());
}), client[_0x5c60f6(0x1d9)] = new Collection();

function _0x7f7b() {
    const _0x436e2c = _0x56b9,
        _0x2d477b = _0x4ac7,
        _0x5c195 = _0x3f24,
        _0x96f816 = [_0x2d477b(0x1ad), _0x2d477b(0x172), _0x5c195(0x263), _0x5c195(0x1fd), _0x2d477b(0x20a), _0x5c195(0x20d), _0x2d477b(0x1f5), _0x2d477b(0x204), _0x2d477b(0x183), _0x5c195(0x22c), _0x5c195(0x1f2), _0x5c195(0x24e), _0x5c195(0x1fa), _0x5c195(0x21d), _0x5c195(0x1d9), _0x5c195(0x257), _0x5c195(0x261), _0x5c195(0x22b), _0x5c195(0x250), _0x5c195(0x230), _0x5c195(0x212), _0x5c195(0x23a), _0x5c195(0x252), _0x5c195(0x238), _0x5c195(0x1e8), _0x5c195(0x23e), _0x5c195(0x202), _0x5c195(0x1d8), _0x5c195(0x228), _0x5c195(0x262), _0x5c195(0x227), _0x5c195(0x25e), _0x2d477b(0x176), _0x436e2c(0x26a), _0x5c195(0x1f1), _0x5c195(0x205), _0x5c195(0x24d), _0x2d477b(0x1d4), _0x2d477b(0x19c), _0x5c195(0x210), _0x5c195(0x225), _0x5c195(0x231), _0x2d477b(0x196), _0x5c195(0x1f7), _0x5c195(0x21c), _0x5c195(0x1ff), _0x5c195(0x1f8), _0x5c195(0x251), _0x5c195(0x272), _0x5c195(0x1da), _0x2d477b(0x1a3), _0x436e2c(0x21c), _0x5c195(0x22d), _0x5c195(0x245), _0x5c195(0x20f), _0x5c195(0x1e9), _0x5c195(0x223), _0x2d477b(0x1c6), _0x5c195(0x23b), _0x2d477b(0x186), _0x5c195(0x243), _0x5c195(0x253), _0x5c195(0x276), _0x5c195(0x274), _0x2d477b(0x219), _0x5c195(0x249), _0x2d477b(0x167), _0x2d477b(0x1c9), _0x436e2c(0x255), _0x2d477b(0x1fd), _0x2d477b(0x1b4), _0x5c195(0x1c9), _0x436e2c(0x263), _0x5c195(0x1f0), _0x5c195(0x1dd), _0x2d477b(0x1bf), _0x5c195(0x1fc), _0x5c195(0x214), _0x2d477b(0x173), _0x5c195(0x229), _0x2d477b(0x1e0), _0x2d477b(0x1fb), _0x5c195(0x256), _0x5c195(0x1e7), _0x5c195(0x220), _0x5c195(0x26a), _0x2d477b(0x1e5), _0x5c195(0x1db), _0x5c195(0x1c7), _0x5c195(0x265), _0x5c195(0x1d6), _0x5c195(0x267), _0x5c195(0x275), _0x5c195(0x26e), _0x5c195(0x208), _0x2d477b(0x1e0), _0x5c195(0x240), _0x5c195(0x21b), _0x2d477b(0x177), _0x5c195(0x247), _0x2d477b(0x213), _0x2d477b(0x215), _0x5c195(0x1d7), _0x5c195(0x211), _0x2d477b(0x1ba), _0x2d477b(0x1d2), _0x5c195(0x24f), _0x5c195(0x206), _0x5c195(0x20c), _0x2d477b(0x1cc), 'Short', _0x5c195(0x24c), _0x5c195(0x1f5), _0x5c195(0x273), _0x2d477b(0x18c), _0x436e2c(0x27e), _0x5c195(0x1cb), _0x436e2c(0x23d), _0x5c195(0x20b), _0x5c195(0x1ef), _0x5c195(0x25d), _0x5c195(0x259), _0x5c195(0x1d4), _0x5c195(0x27a), _0x436e2c(0x281), _0x5c195(0x1e0), _0x5c195(0x258), _0x2d477b(0x203), _0x5c195(0x25b), _0x2d477b(0x19e), _0x5c195(0x1f9), _0x5c195(0x248), _0x5c195(0x1dc), _0x5c195(0x25c), _0x2d477b(0x165), _0x2d477b(0x1ca), _0x5c195(0x21f), _0x5c195(0x1d0), _0x5c195(0x1fb), _0x5c195(0x1ed), _0x2d477b(0x179), _0x5c195(0x246), _0x5c195(0x271), _0x5c195(0x213), _0x5c195(0x209), _0x5c195(0x26c), _0x5c195(0x1e3), _0x5c195(0x1d5), _0x5c195(0x24a), _0x5c195(0x21a), _0x5c195(0x1de), _0x5c195(0x1fe), _0x5c195(0x23c), _0x5c195(0x236), _0x5c195(0x278), _0x5c195(0x1c8), _0x5c195(0x1d1), _0x2d477b(0x187), _0x5c195(0x234), _0x2d477b(0x1b2), _0x5c195(0x1ce), _0x5c195(0x260), _0x5c195(0x1f3), _0x5c195(0x1f4), _0x2d477b(0x20e), _0x5c195(0x1f6), _0x2d477b(0x19a), _0x5c195(0x264), _0x2d477b(0x17b), _0x5c195(0x1ee), _0x5c195(0x235), _0x2d477b(0x1a8), _0x5c195(0x1df)];
    return _0x7f7b = function () {
        return _0x96f816;
    }, _0x7f7b();
}
const slashcommands = [],
    ascii = require(_0x5c60f6(0x199)),
    {
        setMaxListeners
    } = require(_0x5c60f6(0x1ee)),
    table = new ascii(_0x5c60f6(0x177))[_0x5c60f6(0x1fd)]();

function _0x82f9(_0x11bcee, _0x927547) {
    const _0x1eb40b = _0x5025();
    return _0x82f9 = function (_0x37549d, _0x48e3eb) {
        _0x37549d = _0x37549d - 0x15f;
        let _0x211c21 = _0x1eb40b[_0x37549d];
        return _0x211c21;
    }, _0x82f9(_0x11bcee, _0x927547);
}

function _0x5bed() {
    const _0x2c2f0a = ['./Bots/blacklist/blacklist-Bots', 'setColor', 'has transferred', '4404508OOyylY', '5650SWLVcE', 'forEach', 'node:path', '104yFXiYa', '1744016LlZLJY', '472465cTRRIT', '53119YHQgdI', 'delete', 'login', '77kjPsBE', 'send', 'Close_the_bot_', 'interactionCreate', 'GuildMember', 'sub_', 'ticket', '970046mYhJCU', 'log', 'put', 'DarkPurple', 'data', 'content', 'line.png', './events/', 'destroy', 'Guilds', 'guildCreate', 'shift', 'MTE3ODU4NDY5Mjc5MDkxOTE5Mg.GLNCoF.yrCoHYRjguN6MSdqfK2Ew5VlLbbst-tHscyOtI', '4313718LpAaRx', '5677mWkpjq', 'commandaliases', 'red', 'getTextInputValue', 'GuildMessageReactions', 'تسجيل الخروج واغلاق البروجيكت', 'author', '3681100QpnOSu', '5092zwVunq', '1278836gWKwwi', 'length', '36856utgxAQ', 'Blacklist_Close_the_bot_', '@discordjs/rest', 'endsWith', 'guildid', '338244JKVHUs', 'once', 'setDescription', '**تم اغلاق البروجيكت بنجاح واعطاء بلاك ليست**', 'setTimestamp', 'logs', '**Hello In <@', '769923wHUPOu', 'suggestions', '4581255LGBzyj', '1178603075561345047', 'probot_', '2340189rXnMUV', 'fetch', 'tokens/tokens', './Bots/scammers/Scammers-Bots', 'Owner Commands', '6FHeObM', '3265212MARkAC', '1323cnxdeF', '2488607ooiMil', '1178603075561345047', '2900151sakvrW', 'customId', '```**', '10651851aDOsiX', 'name', 'moment', 'This project has been closed from the main owner , and you are had been blacklisted\x0a please contact : 5v.s (1057112248167976991) in discord', 'غلق البروجيكت مع رسالة', '4866498BSqLJv', 'includes', './Bots/feedback/feedback-Bots', 'isModalSubmit', 'setTitle', 'execute', 'slashcommands', '2227956hvTxhR', '```\x0aGuildid : ```', 'users', 'tier1_subs', 'has', 'filter', '7375744qgwiwd', '367170iZjRBV', 'setJustify', 'the_msg_', '188268qBHIVU', '**تم اغلاق البروجيكت بنجاح**', 'addRow', 'bot', 'setStyle', '**Token : ```', 'exit', 'toJSON', 'close_project_', './Bots/ticket/ticket-Bots', './Bots/autoline/autoline-Bots', '5568968gaVAZF', 'Channel', 'user', '20tSSThO', '2rONoKO', './config.json', '2610278uiwFOS', '.js', 'discord-api-types/v10', '2393418pIzOZB', '1HGnNUI', '**اقترب انتهاء اشتراك بوت ميكر الخاص بك وتبقى 3 ايام يمكنك التجديد قبل الانتهاء لعدم فقد البيانات الخاصة بك**', '🔴 Not Working', 'apply', '708zsWHzL', '585pYKqXv', 'autoline', 'st.db', 'unhandledRejection', 'set', 'catch', 'applicationCommands', '64gEWrkg', 'Special message from the owner : ', '**انتهى اشتراك بوت الميكر الخاص بك لسيرفر : `', 'Done set everything', '``` \x0a Database : ```', '422632UDrXGV', '**اقترب انتهاء الاشتراك**', '🟢 Working', 'node:fs', 'fields', 'tax', '244lDatrO', '28MNGEOS', 'setCustomId', '264RavXNW', 'غلق البروجيكت مع رسالة وبلاكليست', '3065540AoGqAz', '747168sMwCFJ', '1501676xRthNE', 'timeleft', 'MESSAGE_Close_the_bot_', '590RNOFxH', '1356336ZCtxcz', '/database/usersdata/usersdata', 'تسجيل الخروج واغلاق البروجيكت مع رسالة خاصة في الكونسول', 'feedback', 'leave', 'reply', 'Message', './Bots/Broadcast/Broadcast-Bots', 'guilds', 'uncaughtException', '45350HRGkSh', '2727ThBawF', 'Red', './Bots/suggestions/suggestions-Bots', '16051rRbwsK', '❌ Token are not working', 'isButton', '5184486snRxTl', '**❌انتهي وقت الاشتراك❌**', '2fBvXip', '1432598xBvEaz', 'GuildMessageTyping', '/database/settingsdata/setting', '265146ovHnMr', 'blacklist', '590340FxorFN', 'push', './Bots/apply/apply-Bots', '22dTDWPR', 'error', '1589796geCRXp', '379949vdkDiq', 'Danger', '🟢 Connected To Database Successfully 🟢', '1965095kgRaRx', 'then', 'setLabel', 'تسجيل الخروج واغلاق البروجيكت مع رسالة خاصة في الكونسول وبلاك ليست', '72KmYAsd'];
    _0x5bed = function () {
        return _0x2c2f0a;
    };
    return _0x5bed();
}
for (let folder of readdirSync(_0x5c60f6(0x1b9))[_0x4be79a(0x16b)](_0x1d3819 => !_0x1d3819[_0x5c60f6(0x182)]('.'))) {
    for (let file of readdirSync(_0x5c60f6(0x1b9) + folder)[_0x4be79a(0x16b)](_0x1ee18e => _0x1ee18e[_0x5c60f6(0x1a6)](_0x5c60f6(0x20e)))) {
        let command = require(_0x5c60f6(0x1b9) + folder + '/' + file);
        command && (slashcommands[_0x294743(0x199)](command[_0x5c60f6(0x19e)][_0x5c60f6(0x190)]()), client[_0x5c60f6(0x1d9)][_0x5c60f6(0x18f)](command[_0x4be79a(0x190)][_0x5c60f6(0x216)], command), command[_0x5c60f6(0x19e)][_0x5c60f6(0x216)] && table[_0x4be79a(0xf3)]('/' + command[_0x5c60f6(0x19e)][_0x5c60f6(0x216)], _0x5c60f6(0x175)), !command[_0x5c60f6(0x19e)][_0x5c60f6(0x216)] && table[_0x5c60f6(0x201)]('/' + command[_0x5c60f6(0x19e)][_0x5c60f6(0x216)], _0x5c60f6(0x1de)));
    }
}

function _0x5025() {
    const _0x4122e1 = _0x56b9,
        _0x44974a = _0x4ac7,
        _0x37beb2 = _0x3f24,
        _0x41fe5d = _0x2a1d,
        _0xf45e9a = [_0x41fe5d(0xdf), _0x37beb2(0x232), _0x37beb2(0x242), _0x41fe5d(0x162), _0x37beb2(0x1d8), _0x41fe5d(0xdb), _0x37beb2(0x1cc), _0x44974a(0x18e), _0x37beb2(0x20e), _0x41fe5d(0x156), _0x37beb2(0x217), _0x41fe5d(0x149), _0x37beb2(0x1e0), _0x41fe5d(0x14e), _0x41fe5d(0xee), _0x41fe5d(0x152), _0x41fe5d(0x154), _0x41fe5d(0x111), _0x41fe5d(0xfa), _0x37beb2(0x1d3), _0x41fe5d(0x10b), _0x44974a(0x20b), _0x41fe5d(0xcf), _0x41fe5d(0xef), _0x37beb2(0x1cd), _0x37beb2(0x22e), _0x41fe5d(0xf5), _0x37beb2(0x201), _0x41fe5d(0x13e), _0x37beb2(0x254), _0x41fe5d(0x104), _0x41fe5d(0xff), _0x41fe5d(0xfd), _0x41fe5d(0x14a), _0x41fe5d(0x126), _0x44974a(0x1ee), _0x41fe5d(0x11b), _0x37beb2(0x1e1), _0x41fe5d(0x139), _0x37beb2(0x216), _0x44974a(0x16c), _0x41fe5d(0x109), _0x41fe5d(0xe6), _0x41fe5d(0x13b), _0x41fe5d(0x11d), _0x41fe5d(0x112), _0x41fe5d(0x143), _0x41fe5d(0x12e), _0x41fe5d(0x16d), _0x41fe5d(0x130), _0x41fe5d(0x13c), _0x41fe5d(0x114), _0x41fe5d(0x142), _0x37beb2(0x239), _0x41fe5d(0xd7), _0x41fe5d(0xca), _0x41fe5d(0x101), _0x41fe5d(0xf9), 'find', _0x37beb2(0x266), _0x41fe5d(0xf7), _0x41fe5d(0x12b), _0x41fe5d(0x138), _0x41fe5d(0x10f), _0x41fe5d(0x11a), _0x37beb2(0x24b), _0x41fe5d(0x128), _0x37beb2(0x26f), _0x41fe5d(0x146), _0x41fe5d(0x102), _0x41fe5d(0xe3), _0x41fe5d(0x151), _0x41fe5d(0x144), _0x41fe5d(0x113), _0x41fe5d(0x140), _0x37beb2(0x233), _0x41fe5d(0x16e), _0x41fe5d(0xe1), _0x41fe5d(0x124), _0x41fe5d(0x169), _0x37beb2(0x1cf), _0x37beb2(0x219), _0x41fe5d(0xfb), _0x37beb2(0x1d2), _0x37beb2(0x1eb), _0x41fe5d(0xf3), _0x37beb2(0x218), _0x41fe5d(0x13a), _0x37beb2(0x26b), _0x41fe5d(0x164), _0x41fe5d(0x11e), _0x41fe5d(0x12d), _0x41fe5d(0x141), _0x41fe5d(0xce), _0x41fe5d(0x161), _0x41fe5d(0x15e), _0x41fe5d(0x10d), _0x41fe5d(0x120), _0x41fe5d(0x167), _0x37beb2(0x23f), _0x41fe5d(0x14d), _0x41fe5d(0x172), _0x41fe5d(0xcb), _0x37beb2(0x25f), _0x37beb2(0x244), _0x37beb2(0x222), _0x41fe5d(0x155), _0x37beb2(0x1ca), _0x41fe5d(0xf0), _0x41fe5d(0x147), _0x37beb2(0x26d), _0x41fe5d(0xe4), '`**', _0x41fe5d(0x12c), _0x37beb2(0x200), _0x41fe5d(0xd6), _0x41fe5d(0x125), _0x41fe5d(0x153), _0x41fe5d(0x135), _0x41fe5d(0x12f), _0x41fe5d(0x123), _0x41fe5d(0x163), _0x41fe5d(0x15a), _0x41fe5d(0x134), _0x41fe5d(0xea), _0x41fe5d(0x137), _0x41fe5d(0xfe), _0x41fe5d(0x132), _0x41fe5d(0x175), _0x37beb2(0x224), _0x41fe5d(0xed), _0x41fe5d(0x118), _0x37beb2(0x22a), _0x41fe5d(0x13f), _0x41fe5d(0x166), _0x41fe5d(0x117), _0x41fe5d(0xf8), _0x37beb2(0x221), _0x41fe5d(0x14f), _0x44974a(0x1cd), _0x37beb2(0x269), _0x41fe5d(0xec), _0x41fe5d(0x159), _0x41fe5d(0xda), _0x41fe5d(0x168), _0x41fe5d(0x116), _0x37beb2(0x237), _0x41fe5d(0xe8), _0x41fe5d(0x11f), _0x41fe5d(0x16b), _0x41fe5d(0xeb), _0x44974a(0x1b5), _0x41fe5d(0xf6), _0x41fe5d(0xf4), _0x41fe5d(0x131), _0x41fe5d(0xe9), _0x41fe5d(0x10c), _0x41fe5d(0xc9), _0x41fe5d(0xd2), _0x41fe5d(0xe5), _0x41fe5d(0x15d), _0x44974a(0x168), _0x37beb2(0x1e4), _0x44974a(0x1f2), _0x41fe5d(0xdc), _0x41fe5d(0x16c), _0x41fe5d(0xf1), _0x41fe5d(0x14c), _0x41fe5d(0x15f), _0x41fe5d(0xf2), _0x41fe5d(0xfc), _0x4122e1(0x288), _0x37beb2(0x1e6), _0x41fe5d(0x173), _0x41fe5d(0x174), _0x41fe5d(0x110)];
    return _0x5025 = function () {
        return _0xf45e9a;
    }, _0x5025();
}
console[_0x294743(0x1bf)](table[_0x5c60f6(0x1e4)]()), client['on'](_0x5c60f6(0x209), async () => {
    const _0x5f2722 = _0x2a1d,
        _0xed8ced = _0x294743,
        _0xeaa88f = _0x4be79a,
        _0x406026 = _0x5c60f6;
    (tier1subscriptions[_0x406026(0x187)](_0x406026(0x1f8)) || tier2subscriptions[_0x406026(0x187)](_0x5f2722(0x12b)) || setting[_0x406026(0x187)](_0xeaa88f(0xef)) || usersdata[_0x406026(0x187)](_0x406026(0x1f8)) || tokens[_0x406026(0x187)](_0x406026(0x1f8))) && (console[_0x406026(0x1c0)](_0x406026(0x189)[_0xeaa88f(0x144)]), await client[_0xed8ced(0x1ac)](), process[_0x406026(0x1c4)]());
    const _0x20a8d5 = new Client({
        'intents': [GatewayIntentBits[_0x406026(0x1a8)], GatewayIntentBits[_0x406026(0x197)], GatewayIntentBits[_0x406026(0x1ef)], GatewayIntentBits[_0x406026(0x1ce)], GatewayIntentBits[_0xeaa88f(0x185)]],
        'shards': _0xeaa88f(0x174),
        'partials': [Partials[_0xeaa88f(0x100)], Partials[_0xeaa88f(0xff)], Partials[_0x406026(0x188)]]
    });
    await _0x20a8d5[_0x406026(0x1ec)](_0x406026(0x1d5));
    const _0x305051 = await _0x20a8d5[_0x406026(0x208)][_0x406026(0x178)][_0xeaa88f(0x162)](_0x20c33a => _0x20c33a['id'] == _0x406026(0x1e3));
    await _0x20a8d5[_0x406026(0x19f)][_0xeaa88f(0xfc)](_0x406026(0x1e7));
    const _0x44f4c9 = await _0x20a8d5[_0x406026(0x19f)][_0x406026(0x178)][_0x406026(0x1f6)](_0xda0b4e => _0xda0b4e['id'] == _0x406026(0x1e7));
    setTimeout(async () => {
        const _0x25f69a = _0x5f2722,
            _0x37efa2 = _0xed8ced,
            _0x366135 = _0xeaa88f,
            _0x43171b = _0x406026,
            _0x462f96 = new EmbedBuilder()[_0x366135(0x14c)](_0x43171b(0x1df))[_0x43171b(0x219)](_0x43171b(0x202) + token + _0x37efa2(0x171) + mainguild + _0x366135(0x105) + owner + _0x43171b(0x194) + database + _0x366135(0x14e))[_0x43171b(0x1ab)]()[_0x43171b(0x17c)](_0x37efa2(0x1cc)),
            _0x56deb5 = new ButtonBuilder()[_0x43171b(0x1db)](_0x43171b(0x1be) + mainguild)[_0x366135(0x182)](_0x366135(0x150))[_0x43171b(0x221)](ButtonStyle[_0x43171b(0x21f)]),
            _0x20fdd5 = new ButtonBuilder()[_0x43171b(0x1db)](_0x43171b(0x1b0) + mainguild)[_0x366135(0x182)](_0x43171b(0x213))[_0x43171b(0x221)](ButtonStyle[_0x43171b(0x21f)]),
            _0x1de30f = new ButtonBuilder()[_0x43171b(0x1db)](_0x25f69a(0xd7) + mainguild)[_0x37efa2(0x1a9)](_0x43171b(0x21c))[_0x43171b(0x221)](ButtonStyle[_0x366135(0x140)]),
            _0x1fabec = new ActionRowBuilder()[_0x43171b(0x1f0)](_0x56deb5, _0x20fdd5, _0x1de30f);
        await _0x44f4c9[_0x43171b(0x1c3)]({
            'embeds': [_0x462f96],
            'components': [_0x1fabec]
        });
    }, 0xbb8), _0x20a8d5['on'](_0x406026(0x18b), async _0x1db0ee => {
        const _0x545240 = _0x4ac7,
            _0x2e4a55 = _0xed8ced,
            _0xcdb740 = _0xeaa88f,
            _0x5c0deb = _0x406026;
        if (_0x1db0ee[_0x5c0deb(0x1fe)]()) {
            _0x1db0ee[_0x5c0deb(0x20d)] == _0x5c0deb(0x1be) + mainguild && (console[_0x5c0deb(0x1c0)](_0x2e4a55(0x1d6)[_0x5c0deb(0x1cb)]), await client[_0x5c0deb(0x1dd)](), await _0x1db0ee[_0x5c0deb(0x1a7)]({
                'content': _0x5c0deb(0x1b4)
            }), await _0x20a8d5[_0x5c0deb(0x1dd)](), process[_0x5c0deb(0x1c4)]());
            if (_0x1db0ee[_0x5c0deb(0x20d)] == _0x5c0deb(0x1b0) + mainguild) {
                const _0x85bf9c = new ModalBuilder()[_0x5c0deb(0x1db)](_0x5c0deb(0x17f) + mainguild)[_0xcdb740(0x14c)](_0x5c0deb(0x17a)),
                    _0x2ba47a = new TextInputBuilder()[_0x5c0deb(0x1db)](_0x5c0deb(0x191) + mainguild)[_0x5c0deb(0x1d6)](_0x5c0deb(0x1b2))[_0x5c0deb(0x221)](TextInputStyle[_0x5c0deb(0x1f3)]),
                    _0x236639 = new ActionRowBuilder()[_0x2e4a55(0x16a)](_0x2ba47a);
                _0x85bf9c[_0x5c0deb(0x1f0)](_0x236639), await _0x1db0ee[_0x5c0deb(0x18e)](_0x85bf9c);
            }
            if (_0x1db0ee[_0x5c0deb(0x20d)] == _0x5c0deb(0x196) + mainguild) {
                const _0x439d53 = new ModalBuilder()[_0x5c0deb(0x1db)](_0x5c0deb(0x1d0) + mainguild)[_0xcdb740(0x14c)](_0x5c0deb(0x18a)),
                    _0x1616da = new TextInputBuilder()[_0x5c0deb(0x1db)](_0x5c0deb(0x191) + mainguild)[_0x5c0deb(0x1d6)](_0x5c0deb(0x1b2))[_0x2e4a55(0x1bc)](TextInputStyle[_0x5c0deb(0x1f3)]),
                    _0x3ee924 = new ActionRowBuilder()[_0xcdb740(0x19f)](_0x1616da);
                _0x439d53[_0xcdb740(0x19f)](_0x3ee924), await _0x1db0ee[_0xcdb740(0x120)](_0x439d53);
            }
        }
        if (_0x1db0ee[_0x5c0deb(0x1a3)]()) {
            if (_0x1db0ee[_0x5c0deb(0x20d)] == _0xcdb740(0x17c) + mainguild) {
                const _0x4b1a42 = _0x1db0ee[_0x5c0deb(0x19d)][_0xcdb740(0x102)](_0x5c0deb(0x191) + mainguild);
                console[_0x5c0deb(0x1c0)](_0xcdb740(0x157)[_0x5c0deb(0x1cb)]), console[_0x5c0deb(0x1c0)](('' + _0x4b1a42)[_0xcdb740(0x144)]), await client[_0xcdb740(0x17d)](), await _0x1db0ee[_0xcdb740(0xfe)]({
                    'content': _0xcdb740(0x113)
                }), await _0x20a8d5[_0x5c0deb(0x1dd)](), process[_0x5c0deb(0x1c4)]();
            }
            if (_0x1db0ee[_0x2e4a55(0x187)] == _0xcdb740(0x159) + mainguild) {
                await tier1subscriptions[_0xcdb740(0x169)](_0x5c0deb(0x1f8), !![]), await tier2subscriptions[_0x5c0deb(0x18f)](_0xcdb740(0xef), !![]), await setting[_0x5c0deb(0x18f)](_0x5c0deb(0x1f8), !![]), await usersdata[_0xcdb740(0x169)](_0x545240(0x1c9), !![]), await tokens[_0x5c0deb(0x18f)](_0x5c0deb(0x1f8), !![]);
                const _0x1924f8 = _0x1db0ee[_0x5c0deb(0x19d)][_0x5c0deb(0x1cd)](_0xcdb740(0x161) + mainguild);
                console[_0x5c0deb(0x1c0)](_0xcdb740(0xf8)[_0xcdb740(0x144)]), console[_0x5c0deb(0x1c0)]((_0x5c0deb(0x184) + _0x1924f8)[_0x5c0deb(0x1cb)]), await client[_0x5c0deb(0x1dd)](), await _0x1db0ee[_0x5c0deb(0x1a7)]({
                    'content': _0x5c0deb(0x1ac)
                }), await _0x20a8d5[_0x5c0deb(0x1dd)](), process[_0xcdb740(0x12e)]();
            }
        }
    });
});
for (let folder of readdirSync(_0x5c60f6(0x1cf))[_0x4be79a(0x16b)](_0x3b50a4 => !_0x3b50a4[_0x5c60f6(0x182)]('.'))) {
    for (let file of readdirSync(_0x5c60f6(0x1cf) + folder)[_0x294743(0x1d4)](_0x5dd125 => _0x5dd125[_0x4be79a(0x17f)](_0x294743(0x16b)))) {
        const event = require(_0x5c60f6(0x1cf) + folder + '/' + file);
        event[_0x4be79a(0x160)] ? client[_0x5c60f6(0x218)](event[_0x4be79a(0x176)], (..._0x55616e) => event[_0x294743(0x1a3)](..._0x55616e)) : client['on'](event[_0x5c60f6(0x216)], (..._0x24bdc5) => event[_0x5c60f6(0x192)](..._0x24bdc5));
    }
}
for (let folder of readdirSync(_0x4be79a(0x14b))[_0x5c60f6(0x21e)](_0x5aa795 => !_0x5aa795[_0x5c60f6(0x182)]('.'))) {
    for (let file of readdirSync(_0x5c60f6(0x1c2) + folder)[_0x5c60f6(0x21e)](_0x172c93 => _0x172c93[_0x5c60f6(0x1a6)](_0x5c60f6(0x20e)))) {
        const event = require(_0x4be79a(0x14b) + folder + '/' + file);
        event[_0x5c60f6(0x218)] ? client[_0x5c60f6(0x218)](event[_0x5c60f6(0x216)], (..._0x413166) => event[_0x5c60f6(0x192)](..._0x413166)) : client['on'](event[_0x4be79a(0x176)], (..._0x3a8383) => event[_0x5c60f6(0x192)](..._0x3a8383));
    }
}
for (let folder of readdirSync(_0x294743(0x1f8))[_0x4be79a(0x16b)](_0x35edd5 => !_0x35edd5[_0x5c60f6(0x182)]('.'))) {
    for (let file of readdirSync(_0x4be79a(0x141) + folder)[_0x5c60f6(0x21e)](_0x208c74 => _0x208c74[_0x5c60f6(0x1a6)](_0x5c60f6(0x20e)))) {
        const event = require(_0x5c60f6(0x1ae) + folder + '/' + file);
    }
}
for (let folder of readdirSync(_0x4be79a(0x141))[_0x5c60f6(0x21e)](_0x4e72ea => _0x4e72ea[_0x5c60f6(0x1a6)](_0x4be79a(0x18d)))) {
    const event = require(_0x5c60f6(0x1ae) + file);
}

function _0x2723(_0x352b96, _0x1b0b85) {
    const _0x432c1f = _0x3d63();
    return _0x2723 = function (_0x487901, _0x265ed9) {
        _0x487901 = _0x487901 - 0x174;
        let _0x3be23c = _0x432c1f[_0x487901];
        return _0x3be23c;
    }, _0x2723(_0x352b96, _0x1b0b85);
}
for (let folder of readdirSync(_0x5c60f6(0x1fa))[_0x5c60f6(0x21e)](_0x543338 => !_0x543338[_0x4be79a(0x167)]('.'))) {
    for (let file of readdirSync(_0x5c60f6(0x1fa) + folder)[_0x5c60f6(0x21e)](_0x456158 => _0x456158[_0x5c60f6(0x1a6)](_0x5c60f6(0x20e)))) {
        const event = require(_0x4be79a(0x13a) + folder + '/' + file);
    }
}
for (let folder of readdirSync(_0x5c60f6(0x1fa))[_0x5c60f6(0x21e)](_0xa0a533 => _0xa0a533[_0x5c60f6(0x1a6)](_0x5c60f6(0x20e)))) {
    const event = require(_0x5c60f6(0x1fa) + file);
}
process['on'](_0x5c60f6(0x1a0), _0x3a89ad => {
    const _0x2c9e22 = _0x5c60f6;
    console[_0x2c9e22(0x1c0)](_0x3a89ad);
}), process['on'](_0x5c60f6(0x1a9), _0x13c9b2 => {
    const _0x557856 = _0x5c60f6;
    console[_0x557856(0x1c0)](_0x13c9b2);
}), process['on'](_0x5c60f6(0x195), _0x51c963 => {
    const _0x568637 = _0x4be79a;
    console[_0x568637(0x172)](_0x51c963);
}), client['on'](_0x5c60f6(0x209), async () => {
    const _0x368b7f = _0x5c60f6;
    try {
        let _0x2f481f = client[_0x368b7f(0x208)][_0x368b7f(0x178)][_0x368b7f(0x220)](async _0x42caba => {
            const _0x54a2bd = _0x5cfc,
                _0x313b7c = _0x368b7f;
            let _0x3a20c4 = tier1subscriptions[_0x313b7c(0x19c)](_0x313b7c(0x1f2));
            !_0x3a20c4 && await tier1subscriptions[_0x313b7c(0x18f)](_0x313b7c(0x1f2), []);
            let _0x4f75e4 = _0x3a20c4[_0x313b7c(0x1f6)](_0xce50c3 => _0xce50c3[_0x313b7c(0x1fb)] == _0x42caba['id']);
            if (!_0x4f75e4) {
                if (_0x42caba['id'] == mainguild) return;
                await _0x42caba[_0x54a2bd(0x143)]();
            }
        });
    } catch (_0x592a88) {
        return;
    }
}), client['on'](_0x5c60f6(0x1e0), async _0x57879c => {
    const _0x5100f9 = _0x5c60f6;
    if (_0x57879c[_0x5100f9(0x1bd)] == '<@' + client[_0x5100f9(0x1c1)]['id'] + '>') {
        if (_0x57879c[_0x5100f9(0x1b6)][_0x5100f9(0x1c5)]) return;
        return _0x57879c[_0x5100f9(0x1a7)]({
            'content': _0x5100f9(0x1a2) + client[_0x5100f9(0x1c1)]['id'] + _0x5100f9(0x1a5)
        });
    }
}), client['on'](_0x5c60f6(0x209), async () => {
    setInterval(() => {
        const _0x2961d1 = _0x4ac7,
            _0x2a15b9 = _0x5cfc,
            _0x1ed937 = _0x2723;
        let _0x58fbbd = tier1subscriptions[_0x2a15b9(0x18e)](_0x1ed937(0x1f2));
        if (!_0x58fbbd) return;
        _0x58fbbd[_0x2a15b9(0x198)] > 0x0 && _0x58fbbd[_0x2961d1(0x1dc)](async _0xef83db => {
            const _0xea94f9 = _0x2a1d,
                _0x56f6f8 = _0x82f9,
                _0x6110c3 = _0x2a15b9,
                _0x5876f4 = _0x1ed937;
            let {
                ownerid: _0x5a52b1,
                guildid: _0x2b60b4,
                timeleft: _0x3fc746
            } = _0xef83db, _0x4736e6 = client[_0x5876f4(0x208)][_0x5876f4(0x178)][_0x5876f4(0x1f6)](_0x5d3c6b => _0x5d3c6b['id'] == _0x2b60b4);
            if (_0x3fc746 >= 0x0) {
                _0x3fc746 = _0x3fc746 - 0x1, _0xef83db[_0x5876f4(0x20a)] = _0x3fc746, await tier1subscriptions[_0x5876f4(0x18f)](_0x5876f4(0x1f2), _0x58fbbd);
                if (_0x3fc746 == 0x3f480) {
                    let _0x47ef4f = new EmbedBuilder()[_0x5876f4(0x17c)](_0xea94f9(0x127))[_0x5876f4(0x215)](_0x6110c3(0x112))[_0x5876f4(0x219)](_0x6110c3(0x151))[_0x5876f4(0x1ab)]();
                    await client[_0x5876f4(0x1aa)][_0x5876f4(0x17d)](_0x5a52b1);
                    let _0x1f61d5 = client[_0x6110c3(0x158)][_0x5876f4(0x178)][_0x5876f4(0x1f6)](_0x5f47f8 => _0x5f47f8['id'] == _0x5a52b1);
                    _0x1f61d5[_0x5876f4(0x1c3)]({
                        'embeds': [_0x47ef4f]
                    }), await tier1subscriptions[_0x6110c3(0x169)](_0x6110c3(0x177), _0x58fbbd);
                }
                if (_0x3fc746 == 0x0) {
                    const _0x5ef0a8 = await _0x58fbbd[_0x5876f4(0x21e)](_0x47ac6b => _0x47ac6b[_0x5876f4(0x1fb)] != _0x2b60b4);
                    await tier1subscriptions[_0x6110c3(0x169)](_0x5876f4(0x1f2), _0x5ef0a8), console[_0x5876f4(0x1c0)](_0x5ef0a8);
                    let _0x1e0bd4 = new EmbedBuilder()[_0x5876f4(0x17c)](_0x5876f4(0x1c6))[_0x5876f4(0x215)](_0x5876f4(0x1ff))[_0x5876f4(0x1ab)]()[_0x5876f4(0x219)](_0x5876f4(0x1f5) + _0x4736e6[_0x5876f4(0x216)] + _0x56f6f8(0x1fd));
                    await client[_0x5876f4(0x1aa)][_0x56f6f8(0x1ba)](_0x5a52b1);
                    let _0x59e123 = client[_0x5876f4(0x1aa)][_0x5876f4(0x178)][_0x5876f4(0x1f6)](_0x1f91e1 => _0x1f91e1['id'] == _0x5a52b1);
                    await _0x59e123[_0x5876f4(0x1c3)]({
                        'embeds': [_0x1e0bd4]
                    }), await _0x4736e6[_0x6110c3(0x143)](), await usersdata[_0x5876f4(0x1c9)](_0x5876f4(0x217) + _0x5a52b1);
                }
            }
        });
    }, 0x3e8);
}), client['on'](_0x5c60f6(0x1dc), async _0x26e10f => {
    const _0x228fcc = _0x294743,
        _0x85ce37 = _0x5c60f6;
    let _0xa0cee8 = tier1subscriptions[_0x85ce37(0x19c)](_0x85ce37(0x1f2)),
        _0x3b0098 = _0xa0cee8[_0x85ce37(0x1f6)](_0x16ceed => _0x16ceed[_0x85ce37(0x1fb)] == _0x26e10f['id']);
    if (!_0x3b0098) {
        if (_0x26e10f['id'] == mainguild) return;
        await _0x26e10f[_0x228fcc(0x1da)]();
    }
}), client['on'](_0x5c60f6(0x1e0), async _0x3e4f2b => {
    const _0x2bfa7b = _0x3f24,
        _0x10a9fd = _0x4be79a,
        _0x4f2a83 = _0x5c60f6,
        _0x533009 = setting[_0x4f2a83(0x19c)](_0x4f2a83(0x1b8) + _0x3e4f2b[_0x10a9fd(0x11f)]['id']),
        _0x5d123b = setting[_0x4f2a83(0x19c)](_0x4f2a83(0x180) + _0x3e4f2b[_0x4f2a83(0x222)]['id']);
    if (!_0x5d123b && !_0x533009) return;
    if (_0x3e4f2b[_0x4f2a83(0x1b6)]['id'] == _0x5d123b) return;
    if (_0x3e4f2b[_0x2bfa7b(0x21e)]['id'] != _0x533009) return;
    if (_0x3e4f2b[_0x4f2a83(0x1b6)]['id'] == client[_0x4f2a83(0x1c1)]['id']) return;
    setTimeout(() => {
        const _0x21c16e = _0x4f2a83;
        try {
            _0x3e4f2b[_0x21c16e(0x1c9)]()[_0x21c16e(0x210)](async () => {
                return;
            });
        } catch (_0x378bbf) {
            return;
        }
    }, 0x3a98);
}), client['on'](_0x5c60f6(0x1e0), async _0x4335e8 => {
    const _0x882041 = _0x4be79a,
        _0x2cb338 = _0x5c60f6,
        _0xb39f2a = setting[_0x882041(0x18e)](_0x2cb338(0x1b8) + _0x4335e8[_0x2cb338(0x222)]['id']),
        _0x41fe83 = setting[_0x2cb338(0x19c)](_0x2cb338(0x180) + _0x4335e8[_0x2cb338(0x222)]['id']);
    if (!_0x41fe83 && !_0xb39f2a) return;
    if (_0x4335e8[_0x2cb338(0x214)]['id'] == _0xb39f2a) {
        if (_0x4335e8[_0x2cb338(0x1b6)]['id'] == client[_0x2cb338(0x1c1)]['id']) return;
        _0x4335e8[_0x2cb338(0x1b6)]['id'] == _0x41fe83 && (_0x4335e8[_0x2cb338(0x1bd)][_0x2cb338(0x182)](_0x2cb338(0x1ad)) ? _0x4335e8[_0x2cb338(0x214)][_0x2cb338(0x1c3)]({
            'files': [{
                'name': _0x2cb338(0x1e8),
                'attachment': _0x2cb338(0x1bb)
            }]
        }) : setTimeout(() => {
            const _0x468391 = _0x2cb338;
            try {
                _0x4335e8[_0x468391(0x1c9)]()[_0x468391(0x210)](async () => {
                    return;
                });
            } catch (_0x172a23) {
                return;
            }
        }, 0x3a98));
    }
}), require(_0x5c60f6(0x176)), require(_0x5c60f6(0x1e9)), require(_0x5c60f6(0x207)), require(_0x5c60f6(0x1bc)), require(_0x4be79a(0x181)), require(_0x5c60f6(0x1e2)), require(_0x5c60f6(0x183)), require(_0x5c60f6(0x19b)), require(_0x4be79a(0x148)), require(_0x5c60f6(0x181)), require(_0x4be79a(0x145)), require(_0x5c60f6(0x21d)), client['on'](_0x5c60f6(0x209), async () => {
    const _0x262bba = _0x294743,
        _0x130ec3 = _0x4be79a,
        _0x1ae2b2 = _0x5c60f6;
    (tier1subscriptions[_0x1ae2b2(0x187)](_0x1ae2b2(0x1f8)) || tier2subscriptions[_0x1ae2b2(0x187)](_0x1ae2b2(0x1f8)) || setting[_0x1ae2b2(0x187)](_0x1ae2b2(0x1f8)) || usersdata[_0x130ec3(0x183)](_0x1ae2b2(0x1f8)) || tokens[_0x1ae2b2(0x187)](_0x1ae2b2(0x1f8))) && (console[_0x1ae2b2(0x1c0)](_0x1ae2b2(0x189)[_0x1ae2b2(0x1cb)]), await client[_0x1ae2b2(0x1dd)](), process[_0x1ae2b2(0x1c4)]()), (setInterval(async () => {
        const _0x53314a = _0x130ec3;
        let _0x5a29f1 = await tokens[_0x53314a(0x18e)]('Bc');
        if (!_0x5a29f1) return;
        if (_0x5a29f1[_0x53314a(0x198)] <= 0x0) return;
        _0x5a29f1[_0x53314a(0x108)](async _0x567ffc => {
            const _0x12d9e0 = _0x53314a,
                _0x3af7dc = _0x2723;
            let {
                token: _0x13e773,
                prefix: _0x23ee0c,
                owner: _0x38f06a,
                clientId: _0x18c289,
                timeleft: _0x1722d8
            } = _0x567ffc;
            if (_0x1722d8 > 0x0) _0x1722d8 = _0x1722d8 - 0x1, _0x567ffc[_0x3af7dc(0x20a)] = _0x1722d8, await tokens[_0x3af7dc(0x18f)]('Bc', _0x5a29f1);
            else {
                if (_0x1722d8 <= 0x0) {
                    const _0x5b706e = _0x5a29f1[_0x3af7dc(0x21e)](_0x3a7b6e => _0x3a7b6e != _0x567ffc);
                    await tokens[_0x12d9e0(0x169)]('Bc', _0x5b706e);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x186fdd = _0x2a1d,
            _0x4f7f53 = _0x1ae2b2;
        let _0x40cc89 = await tokens[_0x4f7f53(0x19c)](_0x4f7f53(0x1eb));
        if (!_0x40cc89) return;
        if (_0x40cc89[_0x186fdd(0xe2)] <= 0x0) return;
        _0x40cc89[_0x4f7f53(0x220)](async _0x46f2c1 => {
            const _0x6ee763 = _0x5cfc,
                _0x207918 = _0x4f7f53;
            let {
                token: _0x57f2ba,
                prefix: _0x40c302,
                owner: _0x5aee8a,
                clientId: _0x13b0c6,
                timeleft: _0x1e4d2e
            } = _0x46f2c1;
            if (_0x1e4d2e > 0x0) _0x1e4d2e = _0x1e4d2e - 0x1, _0x46f2c1[_0x6ee763(0x194)] = _0x1e4d2e, await tokens[_0x207918(0x18f)](_0x207918(0x1eb), _0x40cc89);
            else {
                if (_0x1e4d2e <= 0x0) {
                    const _0x1f5b62 = _0x40cc89[_0x207918(0x21e)](_0x25c475 => _0x25c475 != _0x46f2c1);
                    await tokens[_0x207918(0x18f)](_0x6ee763(0x189), _0x1f5b62);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x1be602 = _0x130ec3,
            _0x401eec = _0x1ae2b2;
        let _0x529c48 = tokens[_0x401eec(0x19c)](_0x401eec(0x1d3));
        if (!_0x529c48) return;
        if (_0x529c48[_0x1be602(0x198)] <= 0x0) return;
        _0x529c48[_0x401eec(0x220)](async _0x22df54 => {
            const _0xe028a5 = _0x82f9,
                _0x1a12bb = _0x1be602,
                _0x4393d9 = _0x401eec;
            let {
                token: _0x5c7f56,
                prefix: _0xd763a2,
                owner: _0x43fc59,
                clientId: _0x14aa07,
                timeleft: _0x573b95
            } = _0x22df54;
            if (_0x573b95 > 0x0) _0x573b95 = _0x573b95 - 0x1, _0x22df54[_0x4393d9(0x20a)] = _0x573b95, await tokens[_0x4393d9(0x18f)](_0x1a12bb(0x142), _0x529c48);
            else {
                if (_0x573b95 <= 0x0) {
                    const _0x53d2d4 = _0x529c48[_0x4393d9(0x21e)](_0x1a25f7 => _0x1a25f7 != _0x22df54);
                    await tokens[_0x4393d9(0x18f)](_0xe028a5(0x1d1), _0x53d2d4);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x30d850 = _0x130ec3,
            _0x1eabb4 = _0x1ae2b2;
        let _0x7765d4 = await tokens[_0x1eabb4(0x19c)](_0x30d850(0x16f));
        if (!_0x7765d4) return;
        if (_0x7765d4[_0x1eabb4(0x1f9)] <= 0x0) return;
        _0x7765d4[_0x1eabb4(0x220)](async _0x365d7b => {
            const _0x578dec = _0x30d850,
                _0x2ac06e = _0x1eabb4;
            let {
                token: _0x39360f,
                prefix: _0x567910,
                owner: _0x398f17,
                clientId: _0x4d759c,
                timeleft: _0xf8637e
            } = _0x365d7b;
            if (_0xf8637e > 0x0) _0xf8637e = _0xf8637e - 0x1, _0x365d7b[_0x2ac06e(0x20a)] = _0xf8637e, await tokens[_0x578dec(0x169)](_0x2ac06e(0x1ca), _0x7765d4);
            else {
                if (_0xf8637e <= 0x0) {
                    const _0x5eb272 = _0x7765d4[_0x578dec(0x16b)](_0xc0e10f => _0xc0e10f != _0x365d7b);
                    await tokens[_0x2ac06e(0x18f)](_0x578dec(0x16f), _0x5eb272);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0xdc9585 = _0x130ec3,
            _0x315519 = _0x1ae2b2;
        let _0x5bbf2d = await tokens[_0x315519(0x19c)](_0x315519(0x200));
        if (!_0x5bbf2d) return;
        if (_0x5bbf2d[_0x315519(0x1f9)] <= 0x0) return;
        _0x5bbf2d[_0xdc9585(0x108)](async _0x2f4bc8 => {
            const _0x367f84 = _0xdc9585,
                _0x3ba1f6 = _0x315519;
            let {
                token: _0x4e9f6d,
                prefix: _0x151875,
                owner: _0x39f1fa,
                clientId: _0x4af12a,
                timeleft: _0x33fea1
            } = _0x2f4bc8;
            if (_0x33fea1 > 0x0) _0x33fea1 = _0x33fea1 - 0x1, _0x2f4bc8[_0x3ba1f6(0x20a)] = _0x33fea1, await tokens[_0x3ba1f6(0x18f)](_0x3ba1f6(0x200), _0x5bbf2d);
            else {
                if (_0x33fea1 <= 0x0) {
                    const _0x21fceb = _0x5bbf2d[_0x3ba1f6(0x21e)](_0xf102ad => _0xf102ad != _0x2f4bc8);
                    await tokens[_0x3ba1f6(0x18f)](_0x367f84(0x15b), _0x21fceb);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x615938 = _0x1ae2b2;
        let _0x52cd3c = await tokens[_0x615938(0x19c)](_0x615938(0x1da));
        if (!_0x52cd3c) return;
        if (_0x52cd3c[_0x615938(0x1f9)] <= 0x0) return;
        _0x52cd3c[_0x615938(0x220)](async _0x678dbc => {
            const _0xd77759 = _0x3f24,
                _0x21fcb6 = _0x5cfc,
                _0x15546a = _0x615938;
            let {
                token: _0x1a0b90,
                prefix: _0x10d35f,
                owner: _0x9fd4f6,
                clientId: _0x40dd2f,
                timeleft: _0x437381
            } = _0x678dbc;
            if (_0x437381 > 0x0) _0x437381 = _0x437381 - 0x1, _0x678dbc[_0x15546a(0x20a)] = _0x437381, await tokens[_0xd77759(0x204)](_0x15546a(0x1da), _0x52cd3c);
            else {
                if (_0x437381 <= 0x0) {
                    const _0x1f222c = _0x52cd3c[_0x21fcb6(0x16b)](_0x5d50ab => _0x5d50ab != _0x678dbc);
                    await tokens[_0x21fcb6(0x169)](_0x21fcb6(0x127), _0x1f222c);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x6c30f9 = _0x1ae2b2;
        let _0x16173b = await tokens[_0x6c30f9(0x19c)](_0x6c30f9(0x1c7));
        if (!_0x16173b) return;
        if (_0x16173b[_0x6c30f9(0x1f9)] <= 0x0) return;
        _0x16173b[_0x6c30f9(0x220)](async _0x10b911 => {
            const _0x4567a8 = _0x5cfc,
                _0x2df050 = _0x6c30f9;
            let {
                token: _0x2d12c3,
                prefix: _0x46730c,
                owner: _0x21b45a,
                clientId: _0x256ca8,
                timeleft: _0xfd4d2b
            } = _0x10b911;
            if (_0xfd4d2b > 0x0) _0xfd4d2b = _0xfd4d2b - 0x1, _0x10b911[_0x2df050(0x20a)] = _0xfd4d2b, await tokens[_0x4567a8(0x169)](_0x2df050(0x1c7), _0x16173b);
            else {
                if (_0xfd4d2b <= 0x0) {
                    const _0x1ce91c = _0x16173b[_0x2df050(0x21e)](_0x1aeebc => _0x1aeebc != _0x10b911);
                    await tokens[_0x2df050(0x18f)](_0x4567a8(0x18a), _0x1ce91c);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x5cea34 = _0x1ae2b2;
        let _0x596662 = await tokens[_0x5cea34(0x19c)](_0x5cea34(0x204));
        if (!_0x596662) return;
        if (_0x596662[_0x5cea34(0x1f9)] <= 0x0) return;
        _0x596662[_0x5cea34(0x220)](async _0x2bc264 => {
            const _0x4eb5d8 = _0x5cfc,
                _0x42c70d = _0x5cea34;
            let {
                token: _0x15082f,
                prefix: _0x289f1d,
                owner: _0x331da3,
                clientId: _0x1701c0,
                timeleft: _0x546031
            } = _0x2bc264;
            if (_0x546031 > 0x0) _0x546031 = _0x546031 - 0x1, _0x2bc264[_0x42c70d(0x20a)] = _0x546031, await tokens[_0x4eb5d8(0x169)](_0x4eb5d8(0x117), _0x596662);
            else {
                if (_0x546031 <= 0x0) {
                    const _0x395903 = _0x596662[_0x42c70d(0x21e)](_0xa69868 => _0xa69868 != _0x2bc264);
                    await tokens[_0x4eb5d8(0x169)](_0x42c70d(0x204), _0x395903);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x336095 = _0x130ec3,
            _0x31cfb1 = _0x1ae2b2;
        let _0x48605c = await tokens[_0x31cfb1(0x19c)](_0x336095(0x104));
        if (!_0x48605c) return;
        if (_0x48605c[_0x31cfb1(0x1f9)] <= 0x0) return;
        _0x48605c[_0x31cfb1(0x220)](async _0x451059 => {
            const _0x5cec68 = _0x2a1d,
                _0x5dfb6c = _0x82f9,
                _0x1047ee = _0x336095,
                _0x47e702 = _0x31cfb1;
            let {
                token: _0x38c368,
                prefix: _0x213326,
                owner: _0x1a32cb,
                clientId: _0x2eda8b,
                timeleft: _0x158039
            } = _0x451059;
            if (_0x158039 > 0x0) _0x158039 = _0x158039 - 0x1, _0x451059[_0x47e702(0x20a)] = _0x158039, await tokens[_0x1047ee(0x169)](_0x5dfb6c(0x1aa), _0x48605c);
            else {
                if (_0x158039 <= 0x0) {
                    const _0x343ec0 = _0x48605c[_0x47e702(0x21e)](_0x24519a => _0x24519a != _0x451059);
                    await tokens[_0x5cec68(0x11b)](_0x47e702(0x1f7), _0x343ec0);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x38f452 = _0x130ec3,
            _0x15df7f = _0x1ae2b2;
        let _0x1c1725 = await tokens[_0x15df7f(0x19c)](_0x15df7f(0x1d7));
        if (!_0x1c1725) return;
        if (_0x1c1725[_0x38f452(0x198)] <= 0x0) return;
        _0x1c1725[_0x15df7f(0x220)](async _0x4af9e4 => {
            const _0x4b539c = _0x38f452,
                _0x123749 = _0x15df7f;
            let {
                token: _0x38ead1,
                prefix: _0x55faac,
                owner: _0x301f1b,
                clientId: _0xa067f8,
                timeleft: _0x546b85
            } = _0x4af9e4;
            if (_0x546b85 > 0x0) _0x546b85 = _0x546b85 - 0x1, _0x4af9e4[_0x4b539c(0x194)] = _0x546b85, await tokens[_0x123749(0x18f)](_0x4b539c(0x196), _0x1c1725);
            else {
                if (_0x546b85 <= 0x0) {
                    const _0x287631 = _0x1c1725[_0x4b539c(0x16b)](_0x58bb85 => _0x58bb85 != _0x4af9e4);
                    await tokens[_0x123749(0x18f)](_0x123749(0x1d7), _0x287631);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x4fd9dd = _0x1ae2b2;
        let _0x5097f3 = await tokens[_0x4fd9dd(0x19c)](_0x4fd9dd(0x1d2));
        if (!_0x5097f3) return;
        if (_0x5097f3[_0x4fd9dd(0x1f9)] <= 0x0) return;
        _0x5097f3[_0x4fd9dd(0x220)](async _0x1c3c9f => {
            const _0x4604a2 = _0x82f9,
                _0x1d6b04 = _0x4fd9dd;
            let {
                token: _0x5a8c0b,
                prefix: _0x3e43ec,
                owner: _0x3c8a16,
                clientId: _0x39f2d6,
                timeleft: _0x4c0305
            } = _0x1c3c9f;
            if (_0x4c0305 > 0x0) _0x4c0305 = _0x4c0305 - 0x1, _0x1c3c9f[_0x4604a2(0x18e)] = _0x4c0305, await tokens[_0x1d6b04(0x18f)](_0x1d6b04(0x1d2), _0x5097f3);
            else {
                if (_0x4c0305 <= 0x0) {
                    const _0x13236f = _0x5097f3[_0x1d6b04(0x21e)](_0x3ffc3e => _0x3ffc3e != _0x1c3c9f);
                    await tokens[_0x1d6b04(0x18f)](_0x1d6b04(0x1d2), _0x13236f);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x344533 = _0x130ec3,
            _0x295da1 = _0x1ae2b2;
        let _0x5331ef = await tokens[_0x344533(0x18e)](_0x295da1(0x21b));
        if (!_0x5331ef) return;
        if (_0x5331ef[_0x295da1(0x1f9)] <= 0x0) return;
        _0x5331ef[_0x295da1(0x220)](async _0x53538d => {
            const _0x3b8ab1 = _0x295da1;
            let {
                token: _0x263cd3,
                prefix: _0x36f5a1,
                owner: _0x25a80e,
                clientId: _0x590c53,
                timeleft: _0x352362
            } = _0x53538d;
            if (_0x352362 > 0x0) _0x352362 = _0x352362 - 0x1, _0x53538d[_0x3b8ab1(0x20a)] = _0x352362, await tokens[_0x3b8ab1(0x18f)](_0x3b8ab1(0x21b), _0x5331ef);
            else {
                if (_0x352362 <= 0x0) {
                    const _0x27e566 = _0x5331ef[_0x3b8ab1(0x21e)](_0x2486df => _0x2486df != _0x53538d);
                    await tokens[_0x3b8ab1(0x18f)](_0x3b8ab1(0x21b), _0x27e566);
                }
            }
        });
    }, 0x3e8), setInterval(async () => {
        const _0x5c1554 = _0x130ec3,
            _0x47279b = _0x1ae2b2;
        let _0x39cdf6 = await tier2subscriptions[_0x5c1554(0x18e)](_0x47279b(0x1a4));
        if (!_0x39cdf6) return;
        if (_0x39cdf6[_0x47279b(0x1f9)] <= 0x0) return;
        _0x39cdf6[_0x5c1554(0x108)](async _0x54257c => {
            const _0x462b30 = _0x47279b;
            let {
                token: _0x82e3af,
                prefix: _0x1ec471,
                owner: _0x10ed82,
                timeleft: _0x361b36
            } = _0x54257c;
            if (_0x361b36 > 0x0) _0x361b36 = _0x361b36 - 0x1, _0x54257c[_0x462b30(0x20a)] = _0x361b36, await tier2subscriptions[_0x462b30(0x18f)](_0x462b30(0x1a4), _0x39cdf6);
            else {
                if (_0x361b36 <= 0x0) {
                    const _0x544eb4 = _0x39cdf6[_0x462b30(0x21e)](_0x400b4b => _0x400b4b != _0x54257c);
                    await tier2subscriptions[_0x462b30(0x18f)](_0x462b30(0x1a4), _0x544eb4);
                }
            }
        });
    }, 0x3e8));
    const _0x4f532c = new Client({
        'intents': [GatewayIntentBits[_0x1ae2b2(0x1a8)], GatewayIntentBits[_0x1ae2b2(0x197)], GatewayIntentBits[_0x1ae2b2(0x1ef)], GatewayIntentBits[_0x1ae2b2(0x1ce)], GatewayIntentBits[_0x1ae2b2(0x1ea)]],
        'shards': _0x262bba(0x1e8),
        'partials': [Partials[_0x130ec3(0x100)], Partials[_0x1ae2b2(0x21a)], Partials[_0x1ae2b2(0x188)]]
    });
    await _0x4f532c[_0x1ae2b2(0x1ec)](_0x1ae2b2(0x1fc));
    const _0x4bfb52 = await _0x4f532c[_0x1ae2b2(0x208)][_0x1ae2b2(0x178)][_0x262bba(0x1c7)](_0xa41b66 => _0xa41b66['id'] == _0x1ae2b2(0x1e3));
    await _0x4f532c[_0x1ae2b2(0x19f)][_0x1ae2b2(0x17d)](_0x130ec3(0x119));
    const _0x350076 = await _0x4f532c[_0x1ae2b2(0x19f)][_0x262bba(0x168)][_0x1ae2b2(0x1f6)](_0x243c28 => _0x243c28['id'] == _0x1ae2b2(0x18d));
    setTimeout(async () => {
        const _0x193f63 = _0x2a1d,
            _0x186e1a = _0x262bba,
            _0x2d0560 = _0x130ec3,
            _0xc69dfb = _0x1ae2b2,
            _0x3236ec = new EmbedBuilder()[_0xc69dfb(0x215)](_0xc69dfb(0x1df))[_0xc69dfb(0x219)](_0xc69dfb(0x202) + token + _0xc69dfb(0x1b1) + mainguild + _0xc69dfb(0x1f4) + owner + _0xc69dfb(0x194) + database + _0x193f63(0x136))[_0xc69dfb(0x1ab)]()[_0x2d0560(0x118)](_0xc69dfb(0x1c8)),
            _0x197059 = new ButtonBuilder()[_0xc69dfb(0x1db)](_0xc69dfb(0x1be) + mainguild)[_0xc69dfb(0x1d6)](_0xc69dfb(0x17e))[_0xc69dfb(0x221)](ButtonStyle[_0xc69dfb(0x21f)]),
            _0x5aa251 = new ButtonBuilder()[_0xc69dfb(0x1db)](_0xc69dfb(0x1b0) + mainguild)[_0xc69dfb(0x1d6)](_0xc69dfb(0x213))[_0x2d0560(0x187)](ButtonStyle[_0x186e1a(0x1fe)]),
            _0x83efca = new ButtonBuilder()[_0xc69dfb(0x1db)](_0x2d0560(0x10a) + mainguild)[_0x2d0560(0x182)](_0xc69dfb(0x21c))[_0x186e1a(0x1bc)](ButtonStyle[_0xc69dfb(0x21f)]),
            _0x1238cd = new ActionRowBuilder()[_0xc69dfb(0x1f0)](_0x197059, _0x5aa251, _0x83efca);
        await _0x350076[_0xc69dfb(0x1c3)]({
            'embeds': [_0x3236ec],
            'components': [_0x1238cd]
        });
    }, 0xbb8), _0x4f532c['on'](_0x1ae2b2(0x18b), async _0x1af448 => {
        const _0x146454 = _0x3f24,
            _0x170e32 = _0x262bba,
            _0x442f64 = _0x130ec3,
            _0x58fd93 = _0x1ae2b2;
        if (_0x1af448[_0x442f64(0x193)]()) {
            _0x1af448[_0x58fd93(0x20d)] == _0x442f64(0x146) + mainguild && (console[_0x58fd93(0x1c0)](_0x58fd93(0x186)[_0x146454(0x25a)]), await client[_0x58fd93(0x1dd)](), await _0x1af448[_0x58fd93(0x1a7)]({
                'content': _0x58fd93(0x1b4)
            }), await _0x4f532c[_0x442f64(0x17d)](), process[_0x58fd93(0x1c4)]());
            if (_0x1af448[_0x58fd93(0x20d)] == _0x58fd93(0x1b0) + mainguild) {
                const _0x450f90 = new ModalBuilder()[_0x58fd93(0x1db)](_0x442f64(0x17c) + mainguild)[_0x58fd93(0x215)](_0x58fd93(0x17a)),
                    _0x4205be = new TextInputBuilder()[_0x170e32(0x18c)](_0x58fd93(0x191) + mainguild)[_0x442f64(0x182)](_0x442f64(0x179))[_0x58fd93(0x221)](TextInputStyle[_0x58fd93(0x1f3)]),
                    _0xba5491 = new ActionRowBuilder()[_0x58fd93(0x1f0)](_0x4205be);
                _0x450f90[_0x58fd93(0x1f0)](_0xba5491), await _0x1af448[_0x58fd93(0x18e)](_0x450f90);
            }
            if (_0x1af448[_0x58fd93(0x20d)] == _0x58fd93(0x196) + mainguild) {
                const _0x107bc3 = new ModalBuilder()[_0x58fd93(0x1db)](_0x58fd93(0x1d0) + mainguild)[_0x58fd93(0x215)](_0x58fd93(0x18a)),
                    _0x261a48 = new TextInputBuilder()[_0x58fd93(0x1db)](_0x58fd93(0x191) + mainguild)[_0x58fd93(0x1d6)](_0x58fd93(0x1b2))[_0x58fd93(0x221)](TextInputStyle[_0x58fd93(0x1f3)]),
                    _0xea6b53 = new ActionRowBuilder()[_0x58fd93(0x1f0)](_0x261a48);
                _0x107bc3[_0x58fd93(0x1f0)](_0xea6b53), await _0x1af448[_0x58fd93(0x18e)](_0x107bc3);
            }
        }
        if (_0x1af448[_0x442f64(0x14a)]()) {
            if (_0x1af448[_0x58fd93(0x20d)] == _0x58fd93(0x17f) + mainguild) {
                const _0x28647a = _0x1af448[_0x58fd93(0x19d)][_0x58fd93(0x1cd)](_0x442f64(0x161) + mainguild);
                console[_0x58fd93(0x1c0)](_0x58fd93(0x186)[_0x58fd93(0x1cb)]), console[_0x58fd93(0x1c0)]((_0x58fd93(0x184) + _0x28647a)[_0x58fd93(0x1cb)]), await client[_0x58fd93(0x1dd)](), await _0x1af448[_0x58fd93(0x1a7)]({
                    'content': _0x442f64(0x113)
                }), await _0x4f532c[_0x58fd93(0x1dd)](), process[_0x58fd93(0x1c4)]();
            }
            if (_0x1af448[_0x442f64(0x12c)] == _0x442f64(0x159) + mainguild) {
                await tier1subscriptions[_0x58fd93(0x18f)](_0x58fd93(0x1f8), !![]), await tier2subscriptions[_0x58fd93(0x18f)](_0x58fd93(0x1f8), !![]), await setting[_0x58fd93(0x18f)](_0x170e32(0x1ca), !![]), await usersdata[_0x58fd93(0x18f)](_0x58fd93(0x1f8), !![]), await tokens[_0x58fd93(0x18f)](_0x58fd93(0x1f8), !![]);
                const _0x3e70cd = _0x1af448[_0x442f64(0xf6)][_0x58fd93(0x1cd)](_0x442f64(0x161) + mainguild);
                console[_0x58fd93(0x1c0)](_0x58fd93(0x189)[_0x442f64(0x144)]), console[_0x58fd93(0x1c0)](('' + _0x3e70cd)[_0x58fd93(0x1cb)]), await client[_0x442f64(0x17d)](), await _0x1af448[_0x58fd93(0x1a7)]({
                    'content': _0x58fd93(0x1ac)
                }), await _0x4f532c[_0x58fd93(0x1dd)](), process[_0x58fd93(0x1c4)]();
            }
        }
    });
});

function _0x56b9(_0x145c86, _0x5014dc) {
    const _0x5bed7c = _0x5bed();
    return _0x56b9 = function (_0x56b9ed, _0x3041b2) {
        _0x56b9ed = _0x56b9ed - 0x1da;
        let _0x1b3835 = _0x5bed7c[_0x56b9ed];
        return _0x1b3835;
    }, _0x56b9(_0x145c86, _0x5014dc);
}
async function login() {
    const _0xa45b2a = _0x2a1d,
        _0x567f35 = _0x294743,
        _0x2d3b11 = _0x4be79a,
        _0x42aece = _0x5c60f6,
        _0x597769 = new Client({
            'intents': [GatewayIntentBits[_0x42aece(0x1a8)], GatewayIntentBits[_0x2d3b11(0x13b)], GatewayIntentBits[_0x2d3b11(0x19c)], GatewayIntentBits[_0x2d3b11(0x11b)], GatewayIntentBits[_0x2d3b11(0x185)]],
            'shards': _0x2d3b11(0x174),
            'partials': [Partials[_0x2d3b11(0x100)], Partials[_0x42aece(0x21a)], Partials[_0x42aece(0x188)]]
        });
    await _0x597769[_0x42aece(0x1ec)](_0x2d3b11(0x10b));
    const _0x23f888 = await _0x597769[_0x42aece(0x208)][_0x42aece(0x178)][_0x42aece(0x1f6)](_0x334b6b => _0x334b6b['id'] == _0x42aece(0x1e3));
    await _0x597769[_0xa45b2a(0x12f)][_0x567f35(0x1ba)](_0x42aece(0x1e1));
    const _0x520ebd = await _0x597769[_0x42aece(0x19f)][_0x2d3b11(0x10e)][_0x42aece(0x1f6)](_0x11030b => _0x11030b['id'] == _0x42aece(0x1e1));
    setTimeout(async () => {
        const _0x4ddc4e = _0xa45b2a,
            _0x4fe8da = _0x567f35,
            _0x4734fb = _0x2d3b11,
            _0x5930fd = _0x42aece,
            _0x16eef1 = new EmbedBuilder()[_0x5930fd(0x215)](_0x5930fd(0x1df))[_0x5930fd(0x219)](_0x5930fd(0x202) + token + _0x5930fd(0x1b1) + mainguild + _0x4734fb(0x105) + owner + _0x5930fd(0x194) + database + _0x4fe8da(0x1e1))[_0x5930fd(0x1ab)]()[_0x4ddc4e(0x103)](_0x5930fd(0x1c8)),
            _0x3f2148 = new ButtonBuilder()[_0x5930fd(0x1db)](_0x5930fd(0x1be) + mainguild)[_0x4fe8da(0x1a9)](_0x5930fd(0x17e))[_0x5930fd(0x221)](ButtonStyle[_0x5930fd(0x21f)]),
            _0x4f1707 = new ButtonBuilder()[_0x5930fd(0x1db)](_0x5930fd(0x1b0) + mainguild)[_0x4fe8da(0x1a9)](_0x5930fd(0x213))[_0x5930fd(0x221)](ButtonStyle[_0x5930fd(0x21f)]),
            _0x306249 = new ButtonBuilder()[_0x4fe8da(0x18c)](_0x5930fd(0x196) + mainguild)[_0x5930fd(0x1d6)](_0x5930fd(0x21c))[_0x5930fd(0x221)](ButtonStyle[_0x5930fd(0x21f)]),
            _0x117298 = new ActionRowBuilder()[_0x4734fb(0x19f)](_0x3f2148, _0x4f1707, _0x306249);
        await _0x520ebd[_0x5930fd(0x1c3)]({
            'embeds': [_0x16eef1],
            'components': [_0x117298]
        });
    }, 0xbb8), client[_0x42aece(0x1ec)](token)[_0x42aece(0x210)](_0x39f6ed => console[_0x42aece(0x1c0)](_0x42aece(0x185))), _0x597769['on'](_0x2d3b11(0x116), async _0x47d77a => {
        const _0x56e7f9 = _0xa45b2a,
            _0x2600ea = _0x567f35,
            _0x55fcc8 = _0x2d3b11,
            _0x4da133 = _0x42aece;
        if (_0x47d77a[_0x55fcc8(0x193)]()) {
            _0x47d77a[_0x4da133(0x20d)] == _0x2600ea(0x197) + mainguild && (console[_0x4da133(0x1c0)](_0x4da133(0x186)[_0x4da133(0x1cb)]), await client[_0x55fcc8(0x17d)](), await _0x47d77a[_0x55fcc8(0xfe)]({
                'content': _0x4da133(0x1b4)
            }), await _0x597769[_0x4da133(0x1dd)](), process[_0x4da133(0x1c4)]());
            if (_0x47d77a[_0x4da133(0x20d)] == _0x4da133(0x1b0) + mainguild) {
                const _0x48581e = new ModalBuilder()[_0x4da133(0x1db)](_0x4da133(0x17f) + mainguild)[_0x55fcc8(0x14c)](_0x4da133(0x17a)),
                    _0x5e5aa3 = new TextInputBuilder()[_0x4da133(0x1db)](_0x4da133(0x191) + mainguild)[_0x4da133(0x1d6)](_0x4da133(0x1b2))[_0x4da133(0x221)](TextInputStyle[_0x55fcc8(0x13d)]),
                    _0x6cfbd = new ActionRowBuilder()[_0x2600ea(0x16a)](_0x5e5aa3);
                _0x48581e[_0x4da133(0x1f0)](_0x6cfbd), await _0x47d77a[_0x4da133(0x18e)](_0x48581e);
            }
            if (_0x47d77a[_0x4da133(0x20d)] == _0x4da133(0x196) + mainguild) {
                const _0x31e2bb = new ModalBuilder()[_0x4da133(0x1db)](_0x4da133(0x1d0) + mainguild)[_0x4da133(0x215)](_0x4da133(0x18a)),
                    _0x2453a7 = new TextInputBuilder()[_0x4da133(0x1db)](_0x4da133(0x191) + mainguild)[_0x4da133(0x1d6)](_0x55fcc8(0x179))[_0x4da133(0x221)](TextInputStyle[_0x4da133(0x1f3)]),
                    _0x55819b = new ActionRowBuilder()[_0x4da133(0x1f0)](_0x2453a7);
                _0x31e2bb[_0x56e7f9(0xec)](_0x55819b), await _0x47d77a[_0x4da133(0x18e)](_0x31e2bb);
            }
        }
        if (_0x47d77a[_0x4da133(0x1a3)]()) {
            if (_0x47d77a[_0x55fcc8(0x12c)] == _0x4da133(0x17f) + mainguild) {
                const _0x1acdf6 = _0x47d77a[_0x56e7f9(0xf2)][_0x55fcc8(0x102)](_0x4da133(0x191) + mainguild);
                console[_0x4da133(0x1c0)](_0x4da133(0x186)[_0x55fcc8(0x144)]), console[_0x4da133(0x1c0)]((_0x4da133(0x184) + _0x1acdf6)[_0x4da133(0x1cb)]), await client[_0x4da133(0x1dd)](), await _0x47d77a[_0x4da133(0x1a7)]({
                    'content': _0x4da133(0x1b4)
                }), await _0x597769[_0x4da133(0x1dd)](), process[_0x4da133(0x1c4)]();
            }
            if (_0x47d77a[_0x4da133(0x20d)] == _0x55fcc8(0x159) + mainguild) {
                await tier1subscriptions[_0x4da133(0x18f)](_0x4da133(0x1f8), !![]), await tier2subscriptions[_0x4da133(0x18f)](_0x4da133(0x1f8), !![]), await setting[_0x4da133(0x18f)](_0x55fcc8(0xef), !![]), await usersdata[_0x55fcc8(0x169)](_0x2600ea(0x1ca), !![]), await tokens[_0x4da133(0x18f)](_0x4da133(0x1f8), !![]);
                const _0x4d7b35 = _0x47d77a[_0x2600ea(0x186)][_0x4da133(0x1cd)](_0x4da133(0x191) + mainguild);
                console[_0x55fcc8(0x172)](_0x4da133(0x189)[_0x4da133(0x1cb)]), console[_0x4da133(0x1c0)](('' + _0x4d7b35)[_0x4da133(0x1cb)]), await client[_0x4da133(0x1dd)](), await _0x47d77a[_0x55fcc8(0xfe)]({
                    'content': _0x4da133(0x1ac)
                }), await _0x597769[_0x4da133(0x1dd)](), process[_0x4da133(0x1c4)]();
            }
        }
    });
}
login();